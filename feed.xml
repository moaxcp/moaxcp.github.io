<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>John Mercier</title>
    <link href="http://johnmercier.com/"/>
    <link rel="self" type="application/atom+xml" href="http://johnmercier.com/feed.xml"/>
    <subtitle>[A software developer interested in java, groovy, and nixos]</subtitle>
    <updated>2018-05-09T02:26:39Z</updated>
    <id>tag:null,2018:05</id>
    <entry>
        <title>Notes on updating visualvm in nixpkgs</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2018/05-08-notes-on-updating-visualvm-in-nixpkgs.html"/>
        <updated>2018-05-08T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2018/05-08-notes-on-updating-visualvm-in-nixpkgs.html</id>
        <category term="ant"/>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://visualvm.github.io/&quot;&gt;VisualVM&lt;/a&gt; is an application for monitoring and performance analysis of java applications. The package for nixos is located &lt;a href=&quot;https://github.com/NixOS/nixpkgs/blob/c7e11a28dce73ecf13e53ce48e83096064700cb8/pkgs/development/tools/java/visualvm/default.nix&quot;&gt;here&lt;/a&gt;. There are a few tips I learned when performing this upgrade.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;==fetchzip&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;title&quot;&gt;
  visualvm/default.nix
 &lt;/div&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code&gt;src = fetchzip {
  url = &quot;https://github.com/visualvm/visualvm.src/releases/download/${version}/visualvm_${builtins.replaceStrings [&quot;.&quot;] [&quot;&quot;]  version}.zip&quot;;
  sha256 = &quot;10ciyggf8mcy3c53shpl03fxqwsa2ilgw3xdgqhb1ah151k18p78&quot;;
};&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;fetchzip uses &quot;source&quot; as the name by default. Only name and checksum affect the path within the nix store. Inheriting the name may solve this problem if the version is updated. Just changing the url may result in the wrong file being used. For visualvm I needed to change the url and sha256. sha256 is a hash of the content of the zip file not the zip file itself. To get the hash use nix-prefetch-url with the attribute to fetch. In the case of visualvm use&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;title&quot;&gt;
  visualvm/default.nix
 &lt;/div&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code&gt;nix-prefetch-url -A visualvm.src&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;nix-prefetch-url will download the src attribute to current directory. The default name of the dir is source. If the hash doesn’t match a message will display the correct hash. The hash is not of the archive it is a deterministic hash of the contents of the archive. You cannot run sha256sum on the file and expect it to be correct.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;==building&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;From nixpkgs repo run&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code&gt;nix-build -A visualvm&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This will build the package and link to the results in the current directory.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;==installing&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code&gt;nix-env -iA visualvm -f .&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This will install the package for the user environment.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The application can now be started.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Bootstrapping Ivy and Other Tasks in Ant</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2018/03-25-bootstrapping-ant.html"/>
        <updated>2018-03-25T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2018/03-25-bootstrapping-ant.html</id>
        <category term="ant"/>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Typically build libraries with &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; tasks are carefully managed in &lt;code&gt;~/.ant/lib&lt;/code&gt; or &lt;code&gt;$ANT_HOME/lib&lt;/code&gt; by the developer. Every project using &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; will have those tasks on the classpath every time &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; is invoked. This can be problematic to developers working on multiple &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; projects. It can be especially problematic for CI servers building &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; projects. Projects cannot select different versions of build tasks making the build none deterministic and dependent on the environment the build is executed in. Wouldn’t it be nice if build libraries could be added to an &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; project dynamically within the build.xml file? This can be made possible by downloading the libraries from a repository like &lt;a href=&quot;https://search.maven.org/&quot;&gt;maven central&lt;/a&gt; and adding the tasks in the project’s build file.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; build system does not come with dependency management. Developers either need to manage dependencies manually or use &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt;. Dependency management is not the easiest task to perform manually and it distracts developers from writing their projects. &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;Ivy&lt;/a&gt; is capable of downloading dependencies from maven central for use in the project. &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;Ivy&lt;/a&gt; will be used to provide build libraries to the &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; project so tasks may be added but first &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; tasks must be added to the project.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_base_build_xml&quot;&gt;base build.xml&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;To get started here is a &lt;code&gt;build.xml&lt;/code&gt; defining some properties we will use to download &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; and a cleanup task.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;title&quot;&gt;
    build.xml
   &lt;/div&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ant&quot; data-lang=&quot;ant&quot;&gt;&amp;lt;project&amp;gt;
    &amp;lt;basename property=&quot;ant.project.name&quot; file=&quot;${basedir}&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;

    &amp;lt;property name=&quot;build.cache.dir&quot; location=&quot;build-cache&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
    &amp;lt;property name=&quot;build.cache.download.dir&quot; location=&quot;${build.cache.dir}/download&quot;/&amp;gt;

    &amp;lt;target name=&quot;cleanBuildCache&quot; description=&quot;Deletes build cache.&quot;&amp;gt;&lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
        &amp;lt;delete dir=&quot;${build.cache.dir}&quot;/&amp;gt;
    &amp;lt;/target&amp;gt;
&amp;lt;/project&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;colist arabic&quot;&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;project name is name of directory&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;setup properties for build cache&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;create target to delete build cache&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Bootstrapping is split into two parts: installing &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; and configuring the build tasks. First &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; tasks are added to the project by downloading &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; with &lt;a href=&quot;http://ant.apache.org/manual/Tasks/get.html&quot;&gt;get&lt;/a&gt; and adding it to the project with &lt;a href=&quot;http://ant.apache.org/manual/Tasks/taskdef.html&quot;&gt;taskdef&lt;/a&gt;. Second &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; is used to resolve other &quot;build&quot; dependencies while ant adds the task with another set of &lt;a href=&quot;http://ant.apache.org/manual/Tasks/taskdef.html&quot;&gt;taskdefs&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_adding_ivy_tasks&quot;&gt;adding ivy tasks&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;Ivy&lt;/a&gt; tasks are added to the project in a installIvy target. If &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; has already been downloaded through a previous build it will skip downloading the jar and just add the tasks.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;title&quot;&gt;
    build.xml
   &lt;/div&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ant&quot; data-lang=&quot;ant&quot;&gt;&amp;lt;target name=&quot;installIvy&quot; description=&quot;Adds ivy jar to build cache and adds ivy tasks to project.&quot;&amp;gt;
    &amp;lt;local name=&quot;ivy.dir&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
    &amp;lt;local name=&quot;ivy.file&quot;/&amp;gt;
    &amp;lt;local name=&quot;ivy.available&quot;/&amp;gt;

    &amp;lt;property name=&quot;ivy.dir&quot; location=&quot;${build.cache.download.dir}/ivy&quot;/&amp;gt;
    &amp;lt;property name=&quot;ivy.file&quot; location=&quot;${ivy.dir}/ivy-${ivy.version}.jar&quot;/&amp;gt;
    &amp;lt;available file=&quot;${ivy.file}&quot; property=&quot;ivy.present&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;

    &amp;lt;echo if:set=&quot;ivy.present&quot;&amp;gt;ivy installed at ${ivy.file}&amp;lt;/echo&amp;gt;

    &amp;lt;mkdir unless:set=&quot;ivy.present&quot; dir=&quot;${ivy.dir}&quot;/&amp;gt;
    &amp;lt;get unless:set=&quot;ivy.present&quot; dest=&quot;${ivy.file}&quot;
        src=&quot;${public.repo}/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;

    &amp;lt;taskdef resource=&quot;org/apache/ivy/ant/antlib.xml&quot; uri=&quot;antlib:org.apache.ivy.ant&quot; classpath=&quot;${ivy.file}&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(4)&lt;/b&gt;
&amp;lt;/target&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;colist arabic&quot;&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;setup local properties for jar location&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;check if ivy file exists&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;download ivy jar unless it has already been downloaded&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;add ivy tasks to project&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;ivy.version is a property defining the version of &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; to use.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ant&quot; data-lang=&quot;ant&quot;&gt;&amp;lt;property name=&quot;ivy.version&quot; value=&quot;2.4.0&quot;/&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;public.repo is a property defining the repo to download &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; from.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ant&quot; data-lang=&quot;ant&quot;&gt;&amp;lt;property name=&quot;public.repo&quot; value=&quot;http://repo1.maven.org/maven2&quot;/&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_adding_other_build_tasks&quot;&gt;adding other build tasks&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Now that &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; has been added to the project other tasks can be resolved using &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; and added to the project. First we will create the ivysettings.xml and ivy.xml for the project. Then we will add the target which will download and add the build tasks.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_ivysettings_xml&quot;&gt;ivysettings.xml&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;ivysettings.xml allows us to define repositories in which to resolve and publish dependencies.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;title&quot;&gt;
     ivysettings.xml
    &lt;/div&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ant&quot; data-lang=&quot;ant&quot;&gt;&amp;lt;ivysettings&amp;gt;
    &amp;lt;settings defaultResolver=&quot;default&quot;/&amp;gt;
    &amp;lt;resolvers&amp;gt;
      &amp;lt;ibiblio name=&quot;public&quot; root=&quot;https://jcenter.bintray.com/&quot; m2compatible=&quot;true&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
    &amp;lt;/resolvers&amp;gt;
    &amp;lt;include url=&quot;${ivy.default.settings.dir}/ivysettings-shared.xml&quot;/&amp;gt;
    &amp;lt;include url=&quot;${ivy.default.settings.dir}/ivysettings-local.xml&quot;/&amp;gt;
    &amp;lt;include url=&quot;${ivy.default.settings.dir}/ivysettings-main-chain.xml&quot;/&amp;gt;
    &amp;lt;include url=&quot;${ivy.default.settings.dir}/ivysettings-default-chain.xml&quot;/&amp;gt;
&amp;lt;/ivysettings&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;colist arabic&quot;&gt; 
    &lt;ol&gt; 
     &lt;li&gt; &lt;p&gt;public repository is set to jcenter&lt;/p&gt; &lt;/li&gt; 
    &lt;/ol&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The settings take advantage of the &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; defaults while setting the public repo to jcenter.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_ivy_xml&quot;&gt;ivy.xml&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;ivy.xml provides project configurations and dependency management for the project. Dependencies can be added to configurations as needed. Configurations are sets of dependencies which can be used by different tasks such as javac and java. We will create a build configuration for the libraries containing &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; tasks.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;title&quot;&gt;
     ivy.xml
    &lt;/div&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ant&quot; data-lang=&quot;ant&quot;&gt;&amp;lt;ivy-module version=&quot;2.0&quot;&amp;gt;
    &amp;lt;info organisation=&quot;${project.organisation}&quot; module=&quot;${ant.project.name}&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
    &amp;lt;configurations defaultconfmapping=&quot;build-&amp;gt;master&quot;&amp;gt;
        &amp;lt;conf name=&quot;build&quot; visibility=&quot;private&quot; description=&quot;libraries added to the ant build classpath&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
    &amp;lt;/configurations&amp;gt;
    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency org=&quot;org.apache.ant&quot; name=&quot;ant-antunit&quot; rev=&quot;1.3&quot; conf=&quot;build&quot;/&amp;gt;&lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;
        &amp;lt;dependency org=&quot;ant-contrib&quot; name=&quot;ant-contrib&quot; rev=&quot;1.0b3&quot; conf=&quot;build&quot;/&amp;gt;
    &amp;lt;/dependencies&amp;gt;
&amp;lt;/ivy-module&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;colist arabic&quot;&gt; 
    &lt;ol&gt; 
     &lt;li&gt; &lt;p&gt;setup project info&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;create build configuration&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;add antunit and ant-contrib to build configuration&lt;/p&gt; &lt;/li&gt; 
    &lt;/ol&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The &lt;a href=&quot;http://ant.apache.org/ivy/&quot;&gt;ivy&lt;/a&gt; file adds antunit and ant-contrib to the build configuration. The build configuration is the set of dependencies which will be used to build the project. antunit allows for the build to be tested while ant-contrib adds some useful build tasks to the project.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_configurebuild_target&quot;&gt;configureBuild target&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Finally the configureBuild target is used to resolve the build dependencies and add the tasks.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;title&quot;&gt;
     build.xml
    &lt;/div&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ant&quot; data-lang=&quot;ant&quot;&gt;&amp;lt;target name=&quot;configureBuild&quot; depends=&quot;installIvy&quot;&amp;gt;
    &amp;lt;ivy:resolve conf=&quot;build&quot;/&amp;gt;
    &amp;lt;ivy:cachepath pathid=&quot;build.classpath&quot; conf=&quot;build&quot;/&amp;gt;
    &amp;lt;taskdef resource=&quot;org/apache/ant/antunit/antlib.xml&quot; uri=&quot;antlib:org.apache.ant.antunit&quot;
        classpathref=&quot;build.classpath&quot;/&amp;gt;
    &amp;lt;taskdef resource=&quot;net/sf/antcontrib/antlib.xml&quot; uri=&quot;antlib:net.sf.antcontrib&quot;
        classpathref=&quot;build.classpath&quot;/&amp;gt;
&amp;lt;/target&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_final_build_xml&quot;&gt;final build.xml&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Here is the final &lt;code&gt;build.xml&lt;/code&gt; file.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;title&quot;&gt;
    build.xml
   &lt;/div&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-ant&quot; data-lang=&quot;ant&quot;&gt;&amp;lt;project xmlns:if=&quot;ant:if&quot;
    xmlns:unless=&quot;ant:unless&quot;
    xmlns:ivy=&quot;antlib:org.apache.ivy.ant&quot;
    xmlns:au=&quot;antlib:org.apache.ant.antunit&quot;
    xmlns:ac=&quot;antlib:net.sf.antcontrib&quot;&amp;gt;

    &amp;lt;basename property=&quot;ant.project.name&quot; file=&quot;${basedir}&quot;/&amp;gt;

    &amp;lt;property name=&quot;ivy.version&quot; value=&quot;2.4.0&quot;/&amp;gt;
    &amp;lt;property name=&quot;ivy.settings.file&quot; location=&quot;ivysettings.xml&quot;/&amp;gt;

    &amp;lt;property name=&quot;build.cache.dir&quot; location=&quot;build-cache&quot;/&amp;gt;
    &amp;lt;property name=&quot;build.cache.download.dir&quot; location=&quot;${build.cache.dir}/download&quot;/&amp;gt;

    &amp;lt;property name=&quot;public.repo&quot; value=&quot;http://repo1.maven.org/maven2&quot;/&amp;gt;

    &amp;lt;target name=&quot;cleanBuildCache&quot; description=&quot;Deletes build cache.&quot;&amp;gt;
        &amp;lt;delete dir=&quot;${build.cache.dir}&quot;/&amp;gt;
    &amp;lt;/target&amp;gt;

    &amp;lt;target name=&quot;installIvy&quot; description=&quot;Adds ivy jar to build cache and adds ivy tasks to project.&quot;&amp;gt;
        &amp;lt;local name=&quot;ivy.dir&quot;/&amp;gt;
        &amp;lt;local name=&quot;ivy.file&quot;/&amp;gt;
        &amp;lt;local name=&quot;ivy.present&quot;/&amp;gt;

        &amp;lt;property name=&quot;ivy.dir&quot; location=&quot;${build.cache.download.dir}/ivy&quot;/&amp;gt;
        &amp;lt;property name=&quot;ivy.file&quot; location=&quot;${ivy.dir}/ivy-${ivy.version}.jar&quot;/&amp;gt;
        &amp;lt;available file=&quot;${ivy.file}&quot; property=&quot;ivy.present&quot;/&amp;gt;

        &amp;lt;echo if:set=&quot;ivy.present&quot;&amp;gt;ivy installed at ${ivy.file}&amp;lt;/echo&amp;gt;

        &amp;lt;mkdir unless:set=&quot;ivy.present&quot; dir=&quot;${ivy.dir}&quot;/&amp;gt;
        &amp;lt;get unless:set=&quot;ivy.present&quot; dest=&quot;${ivy.file}&quot;
            src=&quot;${public.repo}/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar&quot;/&amp;gt;

        &amp;lt;taskdef resource=&quot;org/apache/ivy/ant/antlib.xml&quot; uri=&quot;antlib:org.apache.ivy.ant&quot; classpath=&quot;${ivy.file}&quot;/&amp;gt;
    &amp;lt;/target&amp;gt;

    &amp;lt;target name=&quot;configureBuild&quot; depends=&quot;installIvy&quot;&amp;gt;
        &amp;lt;ivy:resolve conf=&quot;build&quot;/&amp;gt;
        &amp;lt;ivy:cachepath pathid=&quot;build.classpath&quot; conf=&quot;build&quot;/&amp;gt;
        &amp;lt;taskdef resource=&quot;org/apache/ant/antunit/antlib.xml&quot; uri=&quot;antlib:org.apache.ant.antunit&quot;
            classpathref=&quot;build.classpath&quot;/&amp;gt;
        &amp;lt;taskdef resource=&quot;net/sf/antcontrib/antlib.xml&quot; uri=&quot;antlib:net.sf.antcontrib&quot;
            classpathref=&quot;build.classpath&quot;/&amp;gt;
    &amp;lt;/target&amp;gt;
&amp;lt;/project&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Switching to groovy-mte in JBake</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2018/01-21-switching-to-groovy-mte-in-jbake.html"/>
        <updated>2018-01-21T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2018/01-21-switching-to-groovy-mte-in-jbake.html</id>
        <category term="jbake"/>
        <category term="groovy"/>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;One thing I don’t like about &lt;a href=&quot;https://en.wikipedia.org/wiki/JavaServer_Pages&quot;&gt;jsp&lt;/a&gt; is that it looks like &lt;a href=&quot;https://en.wikipedia.org/wiki/HTML&quot;&gt;html&lt;/a&gt;. The default engine for &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; is &lt;a href=&quot;https://freemarker.apache.org/&quot;&gt;freemarker&lt;/a&gt;. Like many other template engines &lt;a href=&quot;https://freemarker.apache.org/&quot;&gt;freemarker&lt;/a&gt; adds expressions to the html language. I would much rather work with something that looks like groovy so I’m going to try out groovy’s &lt;a href=&quot;http://docs.groovy-lang.org/latest/html/documentation/template-engines.html#_the_markuptemplateengine&quot;&gt;MarkupTemplateEngine&lt;/a&gt; as the template engine for &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_using_markuptemplateengine&quot;&gt;Using MarkupTemplateEngine&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;a href=&quot;http://docs.groovy-lang.org/latest/html/documentation/template-engines.html#_the_markuptemplateengine&quot;&gt;groovy-mte&lt;/a&gt; support in &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; allows developers to write templates in a groovy dsl rather than markup. Here is a basic example of how it works:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;import groovy.text.markup.*

def template = new MarkupTemplateEngine(new TemplateConfiguration()).createTemplate(&apos;&apos;&apos;
    html {
        head {
            title(pageTitle)
        }
        body {
            h1(pageTitle)
        }
    }
&apos;&apos;&apos;)&lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;

def model = [pageTitle:&quot;Hello, World!&quot;] &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;

template.make(model).writeTo(new PrintWriter(System.out)) &lt;b class=&quot;conum&quot;&gt;(3)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;colist arabic&quot;&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Create a template&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Define a model&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Make the results&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The builder syntax allows for a more &lt;code&gt;groovy&lt;/code&gt; html. It is easy to recognize as html but, rather than writing all those html tags, developers can use groovy. Running the script results in:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Hello, World!&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_switching_jbake_to_markuptemplateengine&quot;&gt;Switching JBake to MarkupTemplateEngine&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The &lt;a href=&quot;http://jbake.org/docs/2.5.1/#templates_directory&quot;&gt;documentation&lt;/a&gt; implies that changing templates means removing any old templates and replacing them with the new templates. Default assets should also be replaced. There are a number of example templates using the &lt;a href=&quot;https://github.com/topics/jbake-template-project&quot;&gt;jbake-template-project&lt;/a&gt; tag on github. The &lt;a href=&quot;https://github.com/ancho/jbake-example-project-groovy-mte&quot;&gt;groovy-mte&lt;/a&gt; example templates are somewhat outdated but it is a good starting point.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_copy_template_and_assets&quot;&gt;Copy Template and Assets&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;First, clone the groovy-mte project.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;john@n1 ~/projects&amp;gt; git clone https://github.com/ancho/jbake-example-project-groovy-mte.git
Cloning into &apos;jbake-example-project-groovy-mte&apos;...
remote: Counting objects: 250, done.
remote: Total 250 (delta 0), reused 0 (delta 0), pack-reused 250
Receiving objects: 100% (250/250), 1.61 MiB | 312.00 KiB/s, done.
Resolving deltas: 100% (85/85), done.&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Then remove the original &lt;code&gt;templates&lt;/code&gt; and &lt;code&gt;assets&lt;/code&gt; directories from the project.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Then go into the project and copy the files to the site&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;john@n1 ~/projects&amp;gt; cd jbake-example-project-groovy-mte/
john@n1 ~/p/jbake-example-project-groovy-mte (master)&amp;gt; ls
assets  content  jbake.properties  LICENSE  README.md  templates
john@n1 ~/p/jbake-example-project-groovy-mte (master)&amp;gt; cp -r templates ../johnmercier.com/src/jbake/
john@n1 ~/p/jbake-example-project-groovy-mte (master)&amp;gt; ls assets/
css  fonts  img  js
john@n1 ~/p/jbake-example-project-groovy-mte (master)&amp;gt; cp -r assets ../johnmercier.com/src/jbake/&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Bake the site and view the results.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_issues&quot;&gt;Issues&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;There were a few issues I found&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;sect3&quot;&gt; 
    &lt;h4 id=&quot;_tags_tpl&quot;&gt;tags.tpl&lt;/h4&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;posts without tags caused an error in &lt;code&gt;tags.tpl&lt;/code&gt;.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;post.tags.contains(tag)&lt;/code&gt;&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;Needed to be changed to&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;post.tags?.contains(tag)&lt;/code&gt;&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;sect3&quot;&gt; 
    &lt;h4 id=&quot;_jbake_properties&quot;&gt;jbake.properties&lt;/h4&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;jbake.properties needed some new properties&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;site.contextPath=/
blog.title=John Mercier
blog.subtitle=A software developer interested in java, groovy, and nixos
foundation.version=5.5.1&lt;/code&gt;&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;Without &lt;code&gt;site.contextPath&lt;/code&gt; None of the pages could find assets. I have a feeling this could be removed and the templates could use content.rootpath instead. Using an absolute path like this makes it impossible to view the files locally without a server.&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_improvements&quot;&gt;Improvements&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This got the site up and running with groovy-mte but I found a few improvements to make.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_menu_tpl&quot;&gt;menu.tpl&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The twitter and github accounts were hardcoded in the template. The template was changed to use jbake.properties&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;title&quot;&gt;
     menu.tpl
    &lt;/div&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;p(class:&quot;title-contact&quot;){
    a(href:&quot;https://twitter.com/$config.twitter&quot;){
        i(class:&quot;foundicon-twitter&quot;){}
    }
    a(href:&quot;https://github.com/$config.github&quot;){
        i(class:&quot;foundicon-github&quot;){}
    }
}&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;title&quot;&gt;
     jbake.properties
    &lt;/div&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;twitter=moaxcp
github=moaxcp&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_post_summary&quot;&gt;post summary&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Having full posts on the index page can be annoying. I like having a summary of around 10 posts on the index. For most of my pages the summary is the first paragraph or everything up to the first section of the post. It is possible to add support for a summary to &lt;code&gt;post-brick.tpl&lt;/code&gt; but first an explanation.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;&lt;code&gt;index.tpl&lt;/code&gt; and &lt;code&gt;post.tpl&lt;/code&gt; both use &lt;code&gt;post-brick.tpl&lt;/code&gt; as a template for displaying posts. &lt;code&gt;index.tpl&lt;/code&gt; and &lt;code&gt;post.tpl&lt;/code&gt; are &lt;strong&gt;composed&lt;/strong&gt; with &lt;code&gt;post-brick.tpl&lt;/code&gt; to display a consistent blog post. I don’t want it to be consistent. I want &lt;code&gt;post-brick.tpl&lt;/code&gt; to only display a summary when it is used from &lt;code&gt;index.tpl&lt;/code&gt; and display the full post from &lt;code&gt;post.tpl&lt;/code&gt;. This can be done with a few changes to these files.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;sect3&quot;&gt; 
    &lt;h4 id=&quot;_index_tpl&quot;&gt;index.tpl&lt;/h4&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;The first 10 published posts are visible from the index page.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;title&quot;&gt;
      index.tpl
     &lt;/div&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;published_posts[0..9].each { post -&amp;gt;
    model.put(&apos;post&apos;, post)
    include template: &apos;post-brick.tpl&apos;
}&lt;/code&gt;&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;Next a summary is added to each post unless the post already contains a summary. If there are sections the summary is everything before the first section. Otherwise, the first paragraph is used.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;title&quot;&gt;
      index.tpl
     &lt;/div&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;if(!post.summary) {
    def h = post.body.indexOf(&quot;&amp;lt;h&quot;)
    def p = post.body.indexOf(&quot;&amp;lt;/div&amp;gt;&quot;)
    if(h &amp;gt; 0) {
        post.summary = post.body.substring(0, h) &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;
    } else if(post.body.contains(&quot;&amp;lt;/div&amp;gt;&quot;)) {
        post.summary = post.body.substring(0, p + 7) &lt;b class=&quot;conum&quot;&gt;(2)&lt;/b&gt;
    }
}&lt;/code&gt;&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;colist arabic&quot;&gt; 
     &lt;ol&gt; 
      &lt;li&gt; &lt;p&gt;Text before first section is used&lt;/p&gt; &lt;/li&gt; 
      &lt;li&gt; &lt;p&gt;If there are no sections then use first paragraph&lt;/p&gt; &lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;Then &lt;code&gt;post-brick.tpl&lt;/code&gt; is called as a layout rather than an include. This has a few advantages like decoupling from the JBake model and being able to pass in only what is needed for the template to function.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;title&quot;&gt;
      index.tpl
     &lt;/div&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;layout &apos;post-brick.tpl&apos;, config:config, post:post, summary:true &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;colist arabic&quot;&gt; 
     &lt;ol&gt; 
      &lt;li&gt; &lt;p&gt;summary flag set to true&lt;/p&gt; &lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;sect3&quot;&gt; 
    &lt;h4 id=&quot;_post_tpl&quot;&gt;post.tpl&lt;/h4&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;&lt;code&gt;post.tpl&lt;/code&gt; is modified to use a layout just like &lt;code&gt;index.tpl&lt;/code&gt;.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;title&quot;&gt;
      post.tpl
     &lt;/div&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;layout &apos;post-brick.tpl&apos;, config:config, post:content, summary:false &lt;b class=&quot;conum&quot;&gt;(1)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;colist arabic&quot;&gt; 
     &lt;ol&gt; 
      &lt;li&gt; &lt;p&gt;summary flag set to false&lt;/p&gt; &lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;sect3&quot;&gt; 
    &lt;h4 id=&quot;_post_brick_tpl&quot;&gt;post-brick.tpl&lt;/h4&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;&lt;code&gt;post-brick.tpl&lt;/code&gt; is modified to display the summary instead of body when needed.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;title&quot;&gt;
      post-brick.tpl
     &lt;/div&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;yieldUnescaped summary ? post.summary : post.body&lt;/code&gt;&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_disqus_comments&quot;&gt;Disqus comments&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Now that we know when a post in &lt;code&gt;post-brick.tpl&lt;/code&gt; is really a summary we can figure out if comments need to be displayed. Comments are displayed when the post is not a summary. Comments can be added as a new row.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;title&quot;&gt;
     post-brick.tpl
    &lt;/div&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;if(!summary) {
    div(class:&apos;row&apos;) {
        div(id:&apos;disqus_thread&apos;) {
            script {
                yieldUnescaped &quot;&quot;&quot;
                    /**
                    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
                    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
                    /*
                    var disqus_config = function () {
                    this.page.url = &apos;${config.site_host}/${post.uri}&apos;;  // Replace PAGE_URL with your page&apos;s canonical URL variable
                    this.page.identifier = &apos;${post.uri}&apos;; // Replace PAGE_IDENTIFIER with your page&apos;s unique identifier variable
                    };
                    */
                    (function() { // DON&apos;T EDIT BELOW THIS LINE
                    var d = document, s = d.createElement(&apos;script&apos;);
                    s.src = &apos;https://moaxcp.disqus.com/embed.js&apos;;
                    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
                    (d.head || d.body).appendChild(s);
                    })();
                &quot;&quot;&quot;
            }
            noscript {
                yieldUnescaped &apos;Please enable JavaScript to view the &amp;lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;&apos;
            }
        }
    }
}&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;A comment count can also be added for each post. First the disqus script needs to be added to &lt;code&gt;maint.tpl&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;title&quot;&gt;
     main.tpl
    &lt;/div&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;yieldUnescaped &apos;&apos;&apos;
    &amp;lt;script id=&quot;dsq-count-scr&quot; src=&quot;//moaxcp.disqus.com/count.js&quot; async&amp;gt;&amp;lt;/script&amp;gt;
&apos;&apos;&apos;&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;then a link needs to be added to &lt;code&gt;post-brick.tpl&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;title&quot;&gt;
     post-brick.tpl
    &lt;/div&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;a(href:&quot;${config.site_contextPath}${post.uri}#disqus_thread&quot;, &apos;comments&apos;)&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Disqus will look up comment counts using the script and update the link within the dom to include the count text.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Switching From Jekyll To JBake</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2018/01-16-switching-from-jekyll-to-jbake.html"/>
        <updated>2018-01-16T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2018/01-16-switching-from-jekyll-to-jbake.html</id>
        <category term="jbake"/>
        <category term="jekyll"/>
        <category term="groovy"/>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;In a previous post &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; was added to nixos. Now it is time to convert this blog to &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt;. As with any user blog hosted by &lt;a href=&quot;https://github.com&quot;&gt;github&lt;/a&gt; the content needs to be posted to a git repository for the user. My repository is &lt;a href=&quot;https://github.com/moaxcp/moaxcp.github.io&quot;&gt;moaxcp.github.com&lt;/a&gt;. I’m using a &lt;a href=&quot;https://github.com/moaxcp/johnmercier.com&quot;&gt;second repository&lt;/a&gt; for the sources of the site.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;There are a few tools I want to use. &lt;a href=&quot;https://gradle.org/&quot;&gt;Gradle&lt;/a&gt; to build the &lt;a href=&quot;https://github.com/moaxcp/johnmercier.com&quot;&gt;sources&lt;/a&gt; and publish the blog to github. &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; to run the &lt;a href=&quot;https://gradle.org/&quot;&gt;Gradle&lt;/a&gt; tasks anytime the &lt;a href=&quot;https://github.com/moaxcp/johnmercier.com&quot;&gt;sources&lt;/a&gt; change.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;Convert posts from jekyll Markdown format to JBake asciidoc format&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Setup Gradle to build and publish the blog&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Setup travis-ci to update the blog when sources change&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;To get started I had to setup gradle and JBake in a workflow for converting posts and viewing the site.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_setup_gradle&quot;&gt;Setup Gradle&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Gradle has a JBake plugin that can be used to bake the site.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This is good for automating the creation of the site using gradle. Here is an example build.gradle file using the plugin:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;plugins {
    id &apos;org.jbake.site&apos; version &apos;1.0.0&apos;
}

repositories {
    jcenter()
}

tasks.assemble.dependsOn &apos;bake&apos;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;JBake sources need to be created in &lt;code&gt;src/jbake&lt;/code&gt;. This is done with &lt;code&gt;jbake -i&lt;/code&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;mkdir -p src/jbake
cd src/jbake
jbake -i&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Once the sources are setup gradle can bake the site.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;./gradlew build&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_using_jbake&quot;&gt;Using JBake&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;A few changes need to be made to &lt;code&gt;jbake.properties&lt;/code&gt;. First &lt;code&gt;site.host&lt;/code&gt; needs to point to the host url of the site.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;site.host=http://johnmercier.com&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Next the destination folder needs to match where gradle will build the jbake site.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;destination.folder=../../build/jbake&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;With these settings &lt;code&gt;jbake&lt;/code&gt; commands will match the output directory for gradle.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Here is the complete &lt;code&gt;jbake.properties&lt;/code&gt; file.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;site.host=http://johnmercier.com
render.tags=true
render.sitemap=true
destination.folder=../../build/jbake&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_viewing_content&quot;&gt;Viewing content&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;There are a few options to viewing content. First, you can build with gradle and then navigate to index.html and open it in a browser. Another option is &lt;code&gt;jbake -s&lt;/code&gt;. This command will serve the content locally and update the content when the source files change. Gradle does not support this option so &lt;code&gt;jbake -s&lt;/code&gt; needs to be executed manually. This is the best option but jbake doesn’t seem to update content when the templates change.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_workflow&quot;&gt;Workflow&lt;/h3&gt; 
   &lt;div class=&quot;olist arabic&quot;&gt; 
    &lt;ol class=&quot;arabic&quot;&gt; 
     &lt;li&gt; &lt;p&gt;start jbake server &lt;code&gt;jbake -s&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Open browser to localhost:8082&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Convert posts and refresh browser to view changes&lt;/p&gt; &lt;/li&gt; 
    &lt;/ol&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Note: when changing templates restart the server&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_converting_posts&quot;&gt;Converting Posts&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Now that there is an established workflow to view the blog the posts can be converted. The blog posts are written in Markdown with a jekyll header. A simple groovy script can be used to read the files and convert them.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_jekyll_files&quot;&gt;Jekyll files&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Jekyll posts are added under src/jekyll in the gradle project. The file name starts with the date followed by the title. For example:&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;2015-05-30-notion-ebuild.md&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The following code gets this information.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;Date fileNameDate = Date.parse(&apos;yyyy-MM-dd&apos;, file.name.substring(0, 10))
String fileNameTitle = file.name.substring(11, file.name.lastIndexOf(&apos;.&apos;))&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_jbake_files&quot;&gt;JBake files&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;In the jekyll blog all posts are in one dir. The file names start with a timestamp. When the site is generated all post URIs convert the timestamps into directories. A file named &lt;code&gt;2015-07-12-post-title.md&lt;/code&gt; has a URI of 2015/07/12/post-title.html. In JBake it would have a URI of 2015-07-12-post-title.html. This can cause problems for posts that have comments in &lt;a href=&quot;https://disqus.com/&quot;&gt;disqus&lt;/a&gt; because the uri is also an id. For this blog I am organizing files by year. Each year has a directory with all the posts prefixed with month and day (MM-dd). It would be nice to have the disqus id match for old posts and organize the posts in any way possible.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Fortunately for me I have no comments on this blog. So I can organize the files in anyway without a problem. JBake does allow for custom metadata. A disqus id can be added to each post which matches the id used in Jekyll. The post.ftl can check for this id. If it is present use it. If the id is not present default to the uri. I’m not going to implement this solution though since I have no comments.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_reading_the_posts&quot;&gt;Reading the posts&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Reading jekyll’s markdown files involves reading the header and reading the content.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The header is always at the top of the file starting and ending with &lt;code&gt;---&lt;/code&gt;. The header is in yaml format. The dashes and yaml is the &lt;a href=&quot;https://jekyllrb.com/docs/frontmatter/&quot;&gt;Front Matter&lt;/a&gt;. This gets the header text as a string:&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;assert file.text.startsWith(&apos;---\n&apos;), file.name
def removeStart = file.text.substring(4)
assert removeStart.contains(&apos;---\n&apos;), file.name
def headerEnd = removeStart.indexOf(&apos;---\n&apos;)
def headerText = removeStart.substring(0, headerEnd)&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The rest of the text is the Markdown content.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;def content = removeStart.substring(headerEnd + 4)&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Jekyll’s header is in yaml format Yaml can be read in groovy using &lt;a href=&quot;https://bitbucket.org/asomov/snakeyaml&quot;&gt;snakeyaml&lt;/a&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;@Grab(&apos;org.yaml:snakeyaml:1.19&apos;)
import org.yaml.snakeyaml.Yaml

...

Yaml parser = new Yaml()
Map header = parser.load(headerText)&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;sect3&quot;&gt; 
    &lt;h4 id=&quot;_alternative_using_atlasian_commonmark&quot;&gt;Alternative: using atlasian commonmark&lt;/h4&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;An alternative I tried using to read the files is atlassian’s &lt;a href=&quot;https://github.com/atlassian/commonmark-java&quot;&gt;commonmark&lt;/a&gt; libraries. commonmark is able to fully parse the header and content as a Markdown abstract syntax tree. The tree can be manipulated which can be very useful in fixing the Markdown before posts to asciidoc. Unfortunately, commonmark does not have the ability to render the tree back into Markdown. I had to go a different route but this is what I learned about commonmark.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;To setup commonmark I added the dependencies for commonmark and the front matter extension. The front matter extension can read the header.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;@Grab(&apos;com.atlassian.commonmark:commonmark:0.10.0&apos;)
@Grab(&apos;com.atlassian.commonmark:commonmark-ext-yaml-front-matter:0.10.0&apos;)

import org.commonmark.parser.Parser
import org.commonmark.renderer.text.TextContentRenderer
import org.commonmark.node.*
import org.commonmark.ext.front.matter.*&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;Next, the Parser is created with the front matter extension.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;commonmark = Parser.builder()
        .extensions([YamlFrontMatterExtension.create()])
        .build()&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;Parsing a document is easy with the parser and two visitors.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;Document document = commonmark.parse(file.text)
Map data = getHeaderAndUnlink(document)
convertHeadings(document)&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;&lt;code&gt;getHeaderAndUnlink&lt;/code&gt; uses a &lt;code&gt;YamlFrontMatterVisitor&lt;/code&gt; to parse the header and remove it from the document. This is so the document can be rendered without the header.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;Map getHeaderAndUnlink(Document document) {
    def visitor = new AbstractVisitor() {
        YamlFrontMatterVisitor yamlVisitor = new YamlFrontMatterVisitor()
        void visit(CustomNode node) {
            yamlVisitor.visit(node)
            if(node.class == YamlFrontMatterNode) {
                node.unlink()
            }
            visitChildren(node)
        }
        Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt; getData() {
            return yamlVisitor.data
        }
    }
    document.accept(visitor)
    return visitor.data
}&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;&lt;code&gt;convertHeadings&lt;/code&gt; increases all of the headings levels by 1. This is because in an asciidoc post the title should be the only level 1 heading in the file.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;void convertHeadings(Document document) {
    document.accept(new AbstractVisitor() {
        void visit(Heading heading) {
            heading.level += 1
            visitChildren(heading)
        }
    })
}&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;The problem now is how to render the Markdown content again so it may be converted to asciidoc. This currently doesn’t seem possible. I tried using&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;TextContentRenderer.builder().build().render(document)&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;This only renders the text without Markdown formatting. Until commonmark gets a MarkdownRenderer it will not be of help. This could be a good open source contribution in the future.&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_converting_jekyll_markdown_to_jbake_markdown_instead_of_asciidoc&quot;&gt;Converting Jekyll Markdown to JBake Markdown Instead of AsciiDoc&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;At this point there is enough information to make a script which can convert the files to JBake’s Markdown format. Here is the full script:&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;@Grab(&apos;org.yaml:snakeyaml:1.19&apos;)
import org.yaml.snakeyaml.Yaml

def source = new File(&apos;src/jekyll/_posts&apos;)
def destination = new File(&apos;src/jbake/content/blog&apos;)
source.eachFile { file -&amp;gt;
    println file
    assert file.text.startsWith(&apos;---\n&apos;), file.name
    def removeStart = file.text.substring(4)
    assert removeStart.contains(&apos;---\n&apos;), file.name
    def headerEnd = removeStart.indexOf(&apos;---\n&apos;)
    def headerText = removeStart.substring(0, headerEnd)

    assert headerText

    def content = removeStart.substring(headerEnd + 4)

    assert content

    Date fileNameDate = Date.parse(&apos;yyyy-MM-dd&apos;, file.name.substring(0, 10))

    assert fileNameDate

    Yaml parser = new Yaml()
    Map header = parser.load(headerText)

    assert header.keySet()*.toString().every {
        it in [
                &apos;layout&apos;,
                &apos;title&apos;,
                &apos;date&apos;,
                &apos;categories&apos;,
                &apos;tags&apos;,
                &apos;status&apos;,
                &apos;type&apos;,
                &apos;published&apos;,
                &apos;meta&apos;,
                &apos;author&apos;,
                &apos;comments&apos;
        ]
    }

    destination.mkdirs()
    def newFile = new File(destination.toString() + &apos;/&apos; + file.name)

    newFile.withWriter {
        it.println &apos;type=post&apos;
        it.println &quot;title=$header.title&quot;
        it.println &quot;date=${fileNameDate.format(&apos;yyyy-MM-dd&apos;)}&quot;
        it.println &apos;status=published&apos;
        it.println &apos;~~~~~~&apos;
        it.write content
    }
}&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This was enough to see what the content looks like in JBake. The problem with markdown in JBake is all newlines are displayed. I couldn’t figure out how to fix this even with the pegdown extensions enabled. Converting to asciidoc is my next choice.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_converting_jekyll_markdown_to_asciidoc&quot;&gt;Converting Jekyll Markdown to AsciiDoc&lt;/h3&gt; 
   &lt;div class=&quot;sect3&quot;&gt; 
    &lt;h4 id=&quot;_converting_the_header&quot;&gt;Converting the Header&lt;/h4&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;The header can be converted to an asciidoc format with JBake attibutes.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;it.println &quot;= $header.title&quot;
it.println &apos;John Mercier&apos;
it.println fileNameDate.format(&apos;yyyy-MM-dd&apos;)
it.println &apos;:jbake-type: post&apos;
it.println &apos;:jbake-status: published&apos;&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;As mentioned earlier the title should be the only level 1 heading. The rest need to be converted. Without a parser I used regex to fix the headings.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;content = content.replaceAll(&apos;(?m)^####\\s&apos;, &apos;##### &apos;)
content = content.replaceAll(&apos;(?m)^###\\s&apos;, &apos;#### &apos;)
content = content.replaceAll(&apos;(?m)^##\\s&apos;, &apos;### &apos;)
content = content.replaceAll(&apos;(?m)^#\\s&apos;, &apos;## &apos;)&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;Using regex where a parser is required is a common mistake programmers make. In this case the mistake is in codeblocks. Any codeblock containing &lt;code&gt;#&lt;/code&gt; will be read as a Markdown heading.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;## comments&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;would become&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;### comments&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;I’m willing to accept this risk and fix any issues manually.&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;sect3&quot;&gt; 
    &lt;h4 id=&quot;_converting_the_content&quot;&gt;Converting the content&lt;/h4&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;It would be really difficult to write an entire solution to this problem. In my search for a solution I found &lt;a href=&quot;https://github.com/bodiam/markdown-to-asciidoc&quot;&gt;bodiam/markdown-to-asciidoc&lt;/a&gt;. markdown-to-asciidoc is able to convert a Markdown string into asciidoc. This is exactly what I need.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;First the script grabs the dependency and imports the Converter class.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;@Grab(&apos;nl.jworks.markdown_to_asciidoc:markdown_to_asciidoc:1.0&apos;)
import nl.jworks.markdown_to_asciidoc.Converter&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;The markdown content can be converted to asciidoc in one line.&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div class=&quot;listingblock&quot;&gt; 
     &lt;div class=&quot;content&quot;&gt; 
      &lt;pre&gt;it.write Converter.convertMarkdownToAsciiDoc(content)&lt;/pre&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_the_final_script&quot;&gt;The final script&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This is the resulting script&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;@Grab(&apos;org.yaml:snakeyaml:1.19&apos;)
@Grab(&apos;nl.jworks.markdown_to_asciidoc:markdown_to_asciidoc:1.0&apos;)

import org.yaml.snakeyaml.Yaml
import nl.jworks.markdown_to_asciidoc.Converter

def source = new File(&apos;src/jekyll/_posts&apos;)
def destination = new File(&apos;src/jbake/content/blog&apos;)

source.eachFile { file -&amp;gt;
    Date fileNameDate = Date.parse(&apos;yyyy-MM-dd&apos;, file.name.substring(0, 10))
    assert fileNameDate

    println file
    assert file.text.startsWith(&apos;---\n&apos;), file.name
    def removeStart = file.text.substring(4)
    assert removeStart.contains(&apos;---\n&apos;), file.name
    def headerEnd = removeStart.indexOf(&apos;---\n&apos;)
    def headerText = removeStart.substring(0, headerEnd)
    assert headerText

    def content = removeStart.substring(headerEnd + 4)
    assert content

    Yaml parser = new Yaml()
    Map header = parser.load(headerText)

    assert header.keySet()*.toString().every {
        it in [
                &apos;layout&apos;,
                &apos;title&apos;,
                &apos;date&apos;,
                &apos;categories&apos;,
                &apos;tags&apos;,
                &apos;status&apos;,
                &apos;type&apos;,
                &apos;published&apos;,
                &apos;meta&apos;,
                &apos;author&apos;,
                &apos;comments&apos;
        ]
    }

    destination.mkdirs()
    def fileName = file.name.replaceAll(&apos;\\.md$&apos;, &apos;.adoc&apos;)
    def newFile = new File(destination.toString() + &apos;/&apos; + fileNameDate.format(&apos;yyyy&apos;) + &apos;/&apos; + fileName.substring(5))

    newFile.getParentFile().mkdirs()

    newFile.withWriter {
        it.println &quot;= $header.title&quot;
        it.println &apos;John Mercier &amp;lt;moaxcp@gmail.com&amp;gt;&apos;
        it.println fileNameDate.format(&apos;yyyy-MM-dd&apos;)
        it.println &apos;:jbake-type: post&apos;
        it.println &apos;:jbake-status: published&apos;
        content = content.replaceAll(&apos;(?m)^####\\s&apos;, &apos;##### &apos;)
        content = content.replaceAll(&apos;(?m)^###\\s&apos;, &apos;#### &apos;)
        content = content.replaceAll(&apos;(?m)^##\\s&apos;, &apos;### &apos;)
        content = content.replaceAll(&apos;(?m)^#\\s&apos;, &apos;## &apos;)
        it.write Converter.convertMarkdownToAsciiDoc(content)
    }
}&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_adding_images&quot;&gt;Adding images&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Images from jekyll are simply placed into the assets directory in JBake. Many of the images in my posts use html tags. This works in Markdown but not in AsciiDoc. The converter does not convert html tags to AsciiDoc and AsciiDoc does not recognize the tags. As a result the tags are in plain text when viewing the posts. These posts were fixed manually to use Markdown instead of html.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_gradle_git_publish&quot;&gt;Gradle git-publish&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Publishing posts can be accomplished using a gradle plugin called git-publish. After adding the plugin a task called &lt;code&gt;gitPublishPush&lt;/code&gt; is added which can publish the blog.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;plugins {
    id &apos;org.jbake.site&apos; version &apos;1.0.0&apos;
    id &apos;org.ajoberstar.git-publish&apos; version &apos;0.4.0-rc.2&apos;
}

repositories {
    jcenter()
}

tasks.assemble.dependsOn &apos;bake&apos;

gitPublish {
    repoUri = &apos;https://github.com/moaxcp/moaxcp.github.io.git&apos;

    branch = &apos;master&apos;

    contents {
        from bake.output
        from &apos;src/github/CNAME&apos;
    }

    commitMessage = &apos;Publishing from gradle.&apos;
}

tasks.gitPublishPush.dependsOn &apos;bake&apos;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_automatic_publishing_with_travis_ci&quot;&gt;Automatic publishing with travis-ci&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Travis first needs a github token. This token will be used to authenticate travis-ci when it tries to push changes to the &lt;a href=&quot;https://github.com/moaxcp/johnmercier.com&quot;&gt;repo&lt;/a&gt;. I followed &lt;a href=&quot;https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/&quot;&gt;this&lt;/a&gt; guide to create a token. Once the token is create it can be added to the &lt;code&gt;.travis.yml&lt;/code&gt; using [The Travis Client(&lt;a href=&quot;https://github.com/travis-ci/travis.rb&quot; class=&quot;bare&quot;&gt;https://github.com/travis-ci/travis.rb&lt;/a&gt;):&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;travis encrypt &apos;GITHUB_TOKEN=&amp;lt;generated token&amp;gt;&apos; --add&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The token will be set as an environment variable when travis-ci runs. It can be passed to gradle as a system property and used as credentials in &lt;code&gt;gitPublishPush&lt;/code&gt;. The entire travis-ci file looks like this:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;jdk: oraclejdk8
env:
  global:
    secure: eDaQxbFklEL3ei/nkm1ZLXL9/mPohN0t0HaMpHN6R9rKBoMxtue5VnEGEJFa51Mj2/GZUAhGLuRHlAAgKLAt9SE6pBkeuk9JyXkh5QC9MQsqnXGnHec6+jWWqtv3H+U+HciZIPo1LqDsHNALBCtXO7fP1lWVopbbehTz6HiIz+zzXVlsg4xBJ+bvOlMY7Bbt41s37Wyq5XMuFPIqS23ONDjMS9mb/C6FM7Jjo0JwqPv0C9OuHZRkZcZK9u+F4LV9+OnJxqlk4FJIcF7F7mH6TApURm0TbZZXSrInVUdPMQQOoLjJaqQz6WXUAcssFCa+8DK3j6r6hwk9f4+PEyOd5oqCHy5XKNW+pfo6lbcOrRFXmEOl7uD9gUbuiiC8VJfkla1TBq80uG9w2lprga0VsdF1Sd4l2aNEvxImZPT4x3R2ImQ07phYHbl4NYpMmTsn7cWMiM3XGuQbaQP7vr8t8e77FwxHbmFKaJUvP0PfCbctbFvKJqgZLAIDDrQPb+cTn8gMlB65vIUQJgP0hJ2nqn/pV7SOMcATSUqOUE5e97OWNi/4dOvwe+G7+SwOiTIWmUhilBZosSt163fcRzbLzgnu0m7w9o8ynwdIQ16ft+86h9bIhqQpshGteNviZNG93KCvhmlE424ggOkUz79H4h5iwDc84CV+uNn+rZs6GBc=
script:
- &quot;./gradlew build&quot;
- git config --global user.email &quot;travis@travis-ci.org&quot;
- git config --global user.name &quot;travis-ci&quot;
- &quot;./gradlew -Dorg.ajoberstar.grgit.auth.username=$GITHUB_TOKEN gitPublishPush&quot;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;code&gt;org.ajoberstar.grgit.auth.username&lt;/code&gt; is the system property git-publish uses to authorize with github. The full build.gradle file looks like this.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;plugins {
    id &apos;org.jbake.site&apos; version &apos;1.0.0&apos;
    id &apos;org.ajoberstar.git-publish&apos; version &apos;0.4.0-rc.2&apos;
}

repositories {
    jcenter()
}

tasks.assemble.dependsOn &apos;bake&apos;

gitPublish {
    repoUri = &quot;https://github.com/moaxcp/moaxcp.github.io.git&quot;

    branch = &apos;master&apos;

    contents {
        from bake.output
        from &apos;src/github/CNAME&apos;
    }

    commitMessage = &apos;Publishing from gradle.&apos;
}

tasks.gitPublishPush.dependsOn &apos;bake&apos;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_conclusion&quot;&gt;Conclusion&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;We live in a world where there are all sorts of solutions to software problems. Finding one that works is not always obvious. This is the solution I found for my problem and I am happy with it. Thanks for reading!&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Adding JBake to nixpkgs</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/12-28-adding-jbake-to-nixpkgs.html"/>
        <updated>2017-12-28T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/12-28-adding-jbake-to-nixpkgs.html</id>
        <category term="jbake"/>
        <category term="nixos"/>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; is a static site/blog generator. I have been using jekyll for this blog but I would like to try something new. My main operating system is &lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; which does not have a package to install &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt;. It will need to be added. I have already updated &lt;a href=&quot;https://visualvm.github.io/&quot;&gt;visualvm&lt;/a&gt; and &lt;a href=&quot;https://github.com/raboof/notion&quot;&gt;notion&lt;/a&gt; for &lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; but adding a new package is something I haven’t tried yet.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This post will walk through the process of developing the &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; nix expression for the &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;nixpkgs&lt;/a&gt; repository.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_nixpkgs_workflow&quot;&gt;nixpkgs workflow&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Contributing to &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;nixpkgs&lt;/a&gt; is a great workflow with the goal of having an easy to understand log. It is not a typical workflow and some basic understanding is required to contribute to it. &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;nixpkgs&lt;/a&gt; expects only one commit when adding a new package. Normally I would add a commit message for any small change. With the &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;nixpkgs&lt;/a&gt; workflow a local branch can be used to make small commits which can then be squashed on the master branch. There is also two upstream repositories that are used for development. One is used to develop from and the other is used for pull requests. Soon this will make more sense but for now lets setup the fork.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_creating_a_fork_adding_channels_nixpkgs_to_fork&quot;&gt;creating a fork, adding channels, nixpkgs to fork&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Creating a fork is easy with GitHub. Click fork in the top-right corner of the &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;page&lt;/a&gt;. More information can be found &lt;a href=&quot;https://help.github.com/articles/fork-a-repo&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Once the fork under your github account clone it to your local machine.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;git clone https://github.com/moaxcp/nixpkgs.git&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Next, add two remotes.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;git remote add channels git://github.com/NixOS/nixpkgs-channels.git
git remote add nixpkgs https://github.com/NixOS/nixpkgs.git&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;&lt;code&gt;channels&lt;/code&gt; are collections of packages for the nix package manager. It is useful when you want to reuse what is already built on your system. &lt;code&gt;channels&lt;/code&gt; will be used for the local branch to develop the package.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;&lt;code&gt;nixpkgs&lt;/code&gt; is the remote the fork was made from. It is the upstream of this fork. It is used to update master of this fork and to submit pull requests.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_syncing_master_with_upstream_when_outdated&quot;&gt;syncing master with upstream when outdated&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;From time to time the master will be outdated and need to be synced with &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;nixpkgs&lt;/a&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;git fetch nixpkgs
git checkout master
git reset --hard nixpkgs/master
git push origin master --force&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This will help prevent conflicts when a pull request is made.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_creating_local_branch_for_current_commit_of_nixos&quot;&gt;creating local branch for current commit of NixOS&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The version of &lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; being used contains the git commit from &lt;code&gt;channels&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;nix-version
17.09.2476.53e6d671a96 (Hummingbird)&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;&lt;code&gt;53e6d671a96&lt;/code&gt; should be used to create the local branch. This is a good practice. If you use a different commit you risk building all of &lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; just to test a few changes.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;If your system is ever updated the local branch will need to be rebased with that commit.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;git checkout local
git rebase &amp;lt;NixOS commit&amp;gt;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;It is also ok to delete the local branch if the pull request is already.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;git branch -d local&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_adding_jbake_to_local_branch_of_nixpkgs&quot;&gt;adding JBake to local branch of nixpkgs&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Within &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;nixpkgs&lt;/a&gt; there is a large hierarchy of files. For &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; it makes sense to add it under &lt;code&gt;development/tools/jbake/default.nix&lt;/code&gt;. &lt;code&gt;all-packages.nix&lt;/code&gt; also needs to be changed to include &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; so it can be installed by users. &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; should be added to &lt;code&gt;all-packages.nix&lt;/code&gt; first so it can be found by &lt;code&gt;nix-build&lt;/code&gt; during the development process.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_all_packages_nix&quot;&gt;all-packages.nix&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;First, edit &lt;code&gt;pkgs/top-level/all-packages.nix&lt;/code&gt; and add the &lt;code&gt;jbake&lt;/code&gt; attribute.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;jbake = callPackage ../development/tools/jbake { };&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_default_nix&quot;&gt;default.nix&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Starting out we know a few things about &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt;. Nix needs to download the package. And the name to use is &lt;code&gt;jbake-2.5.1&lt;/code&gt;. This is enought to start writing the expression.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Edit &lt;code&gt;pkgs/development/tools/jbake/default.nix&lt;/code&gt; and add the following:&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;{stdenv, fetchurl}:

stdenv.mkDerivation {
    name = &quot;jbake-2.5.1&quot;;
    src = fetchurl {
        url = &quot;&quot;;
        sha256=&quot;&quot;;
    };
}&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The the attribute added to &lt;code&gt;all-packages.nix&lt;/code&gt; and &lt;code&gt;default.nix&lt;/code&gt; added we can attempt to build &lt;code&gt;jbake&lt;/code&gt;. Lets build this file and see what happens. Run nix-build from the root of repository.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;nix-build -A jbake
error: assertion failed at /etc/user/john/projects/nixpkgs/pkgs/build-support/fetchurl/default.nix:90:1
(use ‘--show-trace’ to show detailed location information)&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This is probably because the file is missing a url. Set the url in &lt;code&gt;default.nix&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;url = &quot;http://jbake.org/files/jbake-2.5.1-bin.zip&quot;;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Notice that how the url also contains the name of the derivation. It would be nice to reuse the name value.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;{stdenv, fetchurl}:

stdenv.mkDerivation {
    name = &quot;jbake-2.5.1&quot;;
    src = fetchurl {
        url = &quot;http://jbake.org/files/${name}-bin.zip&quot;;
        sha256=&quot;&quot;;
    };
}&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Save the changes and run &lt;code&gt;nix-build&lt;/code&gt; again.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;nix-build -A jbake
error: undefined variable ‘name’ at
/etc/user/john/projects/nixpkgs/pkgs/development/tools/jbake/default.nix:6:41&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;We get a different error…&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;In a nix expression attributes cannot be reused in a set unless the set is recursive. Add rec to the set:&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;{stdenv, fetchurl}:

stdenv.mkDerivation rec {
    name = &quot;jbake-2.5.1&quot;;
    src = fetchurl {
        url = &quot;http://jbake.org/files/${name}-bin.zip&quot;;
        sha256=&quot;&quot;;
    };
}&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The name can now be reused within the expression. Run &lt;code&gt;nix-build&lt;/code&gt; again.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;nix-build -A jbake
error: Specify hash for fetchurl fixed-output derivation: http://jbake.org/files/jbake-2.5.1-bin.zip
(use ‘--show-trace’ to show detailed location information)&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This is a result of the missing hash. I don’t know the hash but using an invalid hash will give us the real hash to use. Add an invalid hash to the file and run &lt;code&gt;nix-build&lt;/code&gt; again.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;sha256=&quot;1gkdkxssh51jczhgv680i42jjrlia1vbpcqhxvf45xcq9xj95bm5&quot;;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;&lt;code&gt;nix-build&lt;/code&gt; will download the file but give the following error:&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;output path ‘/nix/store/4lj8xga9nxwc2my60z9pjh7r37arhxmx-jbake-2.5.1-bin.zip’ has sha256 hash
‘1r46y84q5x915055hx2vxydaqng3cz0clwz0yhwapgmi4sliygjd’ when
‘1gkdkxssh51jczhgv680i42jjrlia1vbpcqhxvf45xcq9xj95bm5’ was expected
cannot build derivation ‘/nix/store/wnmw6yq876ga9anf59lxwjrc6nddwskx-jbake-2.5.1.drv’: 1 dependencies couldn&apos;t
be built
error: build of ‘/nix/store/wnmw6yq876ga9anf59lxwjrc6nddwskx-jbake-2.5.1.drv’ failed&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This gives the hash to use. Set the hash in &lt;code&gt;default.nix&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;sha256=&quot;1r46y84q5x915055hx2vxydaqng3cz0clwz0yhwapgmi4sliygjd&quot;;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Running nix-build again results in&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;nix-build -A jbake
these derivations will be built:
  /nix/store/r0zvmmjc36wdssyhj1q1ja9lsqwqqlav-jbake-2.5.1.drv
building path(s) ‘/nix/store/a5492adfv7sx9qrilgqf591s3pdqly0k-jbake-2.5.1’
unpacking sources
unpacking source archive /nix/store/4xwch46y38rdca1zh3zx6z0kk2janiyr-jbake-2.5.1-bin.zip
do not know how to unpack source archive /nix/store/4xwch46y38rdca1zh3zx6z0kk2janiyr-jbake-2.5.1-bin.zip
builder for ‘/nix/store/r0zvmmjc36wdssyhj1q1ja9lsqwqqlav-jbake-2.5.1.drv’ failed with exit code 1
error: build of ‘/nix/store/r0zvmmjc36wdssyhj1q1ja9lsqwqqlav-jbake-2.5.1.drv’ failed&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Which means &lt;code&gt;stdenv&lt;/code&gt; does not know how to unpack the downloaded file because it is a &lt;code&gt;zip&lt;/code&gt; rather than a &lt;code&gt;tar.gz&lt;/code&gt;. Looking back at &lt;a href=&quot;http://jbake.org/files/&quot;&gt;JBake files&lt;/a&gt; there is no &lt;code&gt;tar.gz&lt;/code&gt; download. There are some examples of this in &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;nixpkgs&lt;/a&gt; where a &lt;code&gt;zip&lt;/code&gt; file is downloaded and unzipped in the nix expression using &lt;code&gt;unzip&lt;/code&gt;. In these cases, &lt;code&gt;unpackPhase&lt;/code&gt; is changed, adding the &lt;code&gt;unzip&lt;/code&gt; command. Add the code to &lt;code&gt;unzip&lt;/code&gt; the file:&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;{stdenv, fetchurl, unzip}:

stdenv.mkDerivation rec {
    name = &quot;jbake-2.5.1&quot;;
    src = fetchurl {
        url = &quot;http://jbake.org/files/jbake-2.5.1-bin.zip&quot;;
        sha256=&quot;1r46y84q5x915055hx2vxydaqng3cz0clwz0yhwapgmi4sliygjd&quot;;
    };

    buildInputs = [unzip];
    unpackPhase = &quot;unzip ${src}&quot;;
}&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;When this is run with &lt;code&gt;nix-build&lt;/code&gt; we get a new error.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;...
  inflating: jbake-2.5.1/lib/thymeleaf-3.0.3.RELEASE.jar
patching sources
configuring
no configure script, doing nothing
building
no Makefile, doing nothing
installing
install flags: install
make: *** No rule to make target &apos;install&apos;.  Stop.
builder for ‘/nix/store/wjhxbm803yagw32kz1hyfys0k8n3kdnq-jbake-2.5.1.drv’ failed with exit code 2
error: build of ‘/nix/store/wjhxbm803yagw32kz1hyfys0k8n3kdnq-jbake-2.5.1.drv’ failed&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This means &lt;code&gt;stdenv&lt;/code&gt; was not able to build the package using &lt;code&gt;make&lt;/code&gt;. &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; is already built and we only need to install it. This can be done by changing the &lt;code&gt;installPhase&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;{stdenv, fetchurl, unzip}:

stdenv.mkDerivation rec {
    name = &quot;jbake-2.5.1&quot;;
    src = fetchurl {
        url = &quot;http://jbake.org/files/${name}-bin.zip&quot;;
        sha256=&quot;1r46y84q5x915055hx2vxydaqng3cz0clwz0yhwapgmi4sliygjd&quot;;
    };

    buildInputs = [unzip];
    unpackPhase = &quot;unzip ${src}&quot;;
    installPhase = &apos;&apos;
        mkdir -p $out
        cp -r $name/* $out
    &apos;&apos;;
}&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;&lt;code&gt;stdenv&lt;/code&gt; provides &lt;code&gt;$out&lt;/code&gt; as the directory to install the package into. It needs to be created and the files copied over. The &lt;code&gt;zip&lt;/code&gt; contains one directory called &lt;code&gt;jbake-2.5.1&lt;/code&gt; and all of the files in it. &lt;code&gt;cp -r $name/* $out&lt;/code&gt; will copy all of those files into &lt;code&gt;$out&lt;/code&gt; Now when we run nix-build we get&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;...
  inflating: jbake-2.5.1/lib/thymeleaf-3.0.3.RELEASE.jar
patching sources
configuring
no configure script, doing nothing
building
no Makefile, doing nothing
installing
post-installation fixup
shrinking RPATHs of ELF executables and libraries in /nix/store/1cqhcxd4d64r6bgr4ssvk1yi6h5jyx37-jbake-2.5.1
stripping (with flags -S) in /nix/store/1cqhcxd4d64r6bgr4ssvk1yi6h5jyx37-jbake-2.5.1/lib
/nix/store/1cqhcxd4d64r6bgr4ssvk1yi6h5jyx37-jbake-2.5.1/bin
patching script interpreter paths in /nix/store/1cqhcxd4d64r6bgr4ssvk1yi6h5jyx37-jbake-2.5.1
/nix/store/1cqhcxd4d64r6bgr4ssvk1yi6h5jyx37-jbake-2.5.1/bin/jbake: interpreter directive changed from
&quot;/bin/bash&quot; to &quot;/nix/store/hqi64wjn83nw4mnf9a5z9r4vmpl72j3r-bash-4.4-p12/bin/bash&quot;
checking for references to /tmp/nix-build-jbake-2.5.1.drv-0 in
/nix/store/1cqhcxd4d64r6bgr4ssvk1yi6h5jyx37-jbake-2.5.1...
/nix/store/1cqhcxd4d64r6bgr4ssvk1yi6h5jyx37-jbake-2.5.1&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;nix-build creates a link to $out called &lt;code&gt;result&lt;/code&gt; in the current directory for us.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;ls result
bin  example_project_freemarker.zip  example_project_groovy-mte.zip  example_project_groovy.zip  example_project_jade.zip  example_project_thymeleaf.zip  jbake-core.jar  lib  LICENSE&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This looks correct. &lt;code&gt;stdenv&lt;/code&gt; will automatically add the &lt;code&gt;bin&lt;/code&gt; directory to &lt;code&gt;PATH&lt;/code&gt; when a user installs &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt;. Executables in &lt;code&gt;bin&lt;/code&gt; need to be checked for anything that may not work. Viewing &lt;code&gt;bin/jbake&lt;/code&gt; shows the application uses &lt;code&gt;java&lt;/code&gt;. This means &lt;code&gt;java&lt;/code&gt; is a dependency. It needs to be installed by adding &lt;code&gt;jre&lt;/code&gt; to the expression.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;{stdenv, fetchurl, unzip, jre}:&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;There is still a problem though. The executable may not be using the verison of &lt;code&gt;java&lt;/code&gt; installed by &lt;code&gt;nix&lt;/code&gt;. To fix this the executable needs to use the real path to the &lt;code&gt;java&lt;/code&gt; executable installed by the &lt;code&gt;jre&lt;/code&gt; dependency. &lt;code&gt;stdenv&lt;/code&gt; provides the function &lt;code&gt;substituteInPlace&lt;/code&gt; which will fix the &lt;code&gt;jbake&lt;/code&gt; script during the installPhase.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;{stdenv, fetchurl, unzip, jre}:

stdenv.mkDerivation rec {
    name = &quot;jbake-2.5.1&quot;;
    src = fetchurl {
        url = &quot;http://jbake.org/files/${name}-bin.zip&quot;;
        sha256=&quot;1r46y84q5x915055hx2vxydaqng3cz0clwz0yhwapgmi4sliygjd&quot;;
    };

    buildInputs = [unzip];
    unpackPhase = &quot;unzip ${src}&quot;;
    installPhase = &apos;&apos;
        substituteInPlace $name/bin/jbake --replace &quot;java&quot; &quot;${jre}/bin/java&quot;
        mkdir -p $out
        cp -r $name/* $out
    &apos;&apos;;
}&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The executable now uses the &lt;code&gt;java&lt;/code&gt; dependency installed in the nix-store.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;/nix/store/jgpc401wdfg1gibvnlp60ddav4fi68ys-openjdk-8u152b16-jre/bin/java -jar &quot;${EXEC_PARENT}/jbake-core.jar&quot; $@&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The results look good and now &lt;code&gt;meta&lt;/code&gt; needs to be added to the file. &lt;code&gt;meta&lt;/code&gt; contains details about the package for users to view. It is also a way to add yourself as a maintainer.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;First make sure you are in &lt;code&gt;maintainers.nix&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;  moaxcp = &quot;John Mercier &amp;lt;moaxcp@gmail.com&amp;gt;&quot;;&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;The file is in alphabetical order by attribute name.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Then, add &lt;code&gt;meta&lt;/code&gt; to &lt;code&gt;default.nix&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This is the final version of &lt;code&gt;default.nix&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;{stdenv, fetchurl, unzip, jre}:

stdenv.mkDerivation rec {
    name = &quot;jbake-2.5.1&quot;;
    src = fetchurl {
        url = &quot;http://jbake.org/files/${name}-bin.zip&quot;;
        sha256=&quot;1r46y84q5x915055hx2vxydaqng3cz0clwz0yhwapgmi4sliygjd&quot;;
    };

    buildInputs = [unzip];
    unpackPhase = &quot;unzip ${src}&quot;;
    installPhase = &apos;&apos;
        substituteInPlace $name/bin/jbake --replace &quot;java&quot; &quot;${jre}/bin/java&quot;
        mkdir -p $out
        cp -r $name/* $out
    &apos;&apos;;

    meta = with stdenv.lib; {
        description = &quot;JBake is a Java based, open source, static site/blog generator for developers &amp;amp; designers&quot;;
        homepage = &quot;http://jbake.org/&quot;;
        license = licenses.mit;
        maintainers = with maintainers; [ moaxcp ];
    };
}&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Make sure the file works with &lt;code&gt;nix-build&lt;/code&gt; and also install it with &lt;code&gt;nix-env&lt;/code&gt;.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;From nixpkgs run.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;nix-build
nix-env -f . -iA jbake&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_squashing_commits_in_local_branch&quot;&gt;squashing commits in local branch&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Once the expression is ready for a pull request a single commit needs to be added to the master branch. If there were many commits during development they can be squashed. Squashing commits can be done following &lt;a href=&quot;http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html&quot;&gt;this&lt;/a&gt; guide. Make sure the commit message follows the &lt;a href=&quot;https://github.com/NixOS/nixpkgs/blob/master/.github/CONTRIBUTING.md&quot;&gt;guidelines&lt;/a&gt; for &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;nixpkgs&lt;/a&gt;. The commit message for this change is.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;jbake: init at 2.5.1&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_cherry_pick_commits_to_master_branch&quot;&gt;cherry-pick commits to master branch&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;View &lt;code&gt;git log&lt;/code&gt; and find the commit hash.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;commit dc521d4ad609743008bfa31c0d681c8b4141e815 (HEAD -&amp;gt; local, origin/local)
Author: John Mercier &amp;lt;moaxcp@gmail.com&amp;gt;
Date:   Tue Dec 26 20:06:19 2017 -0500

    jbake: init at 2.5.1&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Switch to master and cherry-pick the commit.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;git cherry-pick dc521d4ad609743008bfa31c0d681c8b4141e815&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_create_pull_request_to_add_jbake&quot;&gt;create pull request to add jbake&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Using GitHub navigate to NixOS/nixpkgs and add a pull request. Follow the template. The review should only take a few days. The review for &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; is &lt;a href=&quot;https://github.com/NixOS/nixpkgs/pull/33101&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_conclusion&quot;&gt;Conclusion&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Adding packages to &lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;nixpkgs&lt;/a&gt; can be fun. There is a lot of packages especially for java that should be added/maintained. I hope this helps in some way.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>obnam on nixos</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/07-15-obnam-on-nixos.html"/>
        <updated>2017-07-15T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/07-15-obnam-on-nixos.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;http://www.obnam.org&quot;&gt;obnam&lt;/a&gt; is a backup program I have used &lt;a href=&quot;http://moaxcp.github.io/2015/09/09/obnam-on-gentoo.html&quot;&gt;used&lt;/a&gt; in the past to backup my gentoo system. Now that I am using nixos I would like to setup backups for a number of reasons:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;olist arabic&quot;&gt; 
 &lt;ol class=&quot;arabic&quot;&gt; 
  &lt;li&gt; &lt;p&gt;I am on satalite internet so building the nix store, and downloading files from dropbox again could cost a lot of time.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;there are still a lot of files that are not in the nixstore.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Setting up obnam on nixos starts with installing it. This is done by adding obnam to the systemPackages.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;environment.systemPackages = with pkgs; [
  obnam
];&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The next part is setting up the configuration. obnam search for a config in the following order.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;/etc/obnam.conf
/etc/obnam/*.conf
~/.obnam.conf
~/.config/obnam/*.conf&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Nixos is able to create an etc file from it’s configuration with the &lt;code&gt;environment.etc&lt;/code&gt; attribute. To create &lt;code&gt;/etc/obnam.conf&lt;/code&gt; add this code to &lt;code&gt;configuration.nix&lt;/code&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;environment.etc.&quot;obnam.conf&quot; = {
  enable = true;
  text = &apos;&apos;
    [config]
    repository = /data/obnam/all
    client-name = n1
    log = /data/obnam/all.log
    root = /
    one-file-system = yes
    exclude = /data
  &apos;&apos;;
};&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;At this point (once &lt;code&gt;nixos-rebuild switch&lt;/code&gt; is run) obnam can be run manually as root. It would be nice if backups were run daily though. This can be setup with fcron.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;services.fcron = {
  enable = true;
  allow = [ &quot;john&quot; ];
  systab = &apos;&apos;
    @ 1d obnam backup
  &apos;&apos;;
};&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The above code will install fcron and setup a job to run obnam once a day. Since systemd is used on nixos it would be better to use a timer instead of fcron. This can be done by removing &lt;code&gt;services.fcron&lt;/code&gt; and adding a systemd service and timer for obnam.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;systemd.services.obnam = {
  description = &quot;Perform system backup&quot;;
  script = &quot;${pkgs.obnam}/bin/obnam backup&quot;;
};

systemd.timers.obnam = {
  description = &quot;run obnam every day&quot;;
  wantedBy = [ &quot;timers.target&quot; ];
  timerConfig = {
    OnCalendar = &quot;daily&quot;;
    Persistent = true;
  };
};&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>linux issues in nixos</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/06-24-linux-issue-in-nixos.html"/>
        <updated>2017-06-24T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/06-24-linux-issue-in-nixos.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After installing nixos I had some issues with the linux kernel and possibly kde. At boot I would get errors like this.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.dropbox.com/s/bj50sqgfgy9yp1b/2017-06-20%2020.43.20.jpg?dl=0&quot; class=&quot;bare&quot;&gt;https://www.dropbox.com/s/bj50sqgfgy9yp1b/2017-06-20%2020.43.20.jpg?dl=0&lt;/a&gt; &lt;a href=&quot;https://www.dropbox.com/s/16mj6taamdekqyw/2017-06-21%2021.08.43.jpg?dl=0&quot; class=&quot;bare&quot;&gt;https://www.dropbox.com/s/16mj6taamdekqyw/2017-06-21%2021.08.43.jpg?dl=0&lt;/a&gt; &lt;a href=&quot;https://www.dropbox.com/s/o29rerznr38dkw0/2017-06-21%2021.06.05.jpg?dl=0&quot; class=&quot;bare&quot;&gt;https://www.dropbox.com/s/o29rerznr38dkw0/2017-06-21%2021.06.05.jpg?dl=0&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;And once in Konsole I got this error just before the system froze.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.dropbox.com/s/3rub75hpzfbludm/2017-06-20%2020.30.58.jpg?dl=0&quot; class=&quot;bare&quot;&gt;https://www.dropbox.com/s/3rub75hpzfbludm/2017-06-20%2020.30.58.jpg?dl=0&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After various searches for smp.c line 127 it seems like a bug in linux. I found &lt;a href=&quot;https://bugs.archlinux.org/task/52246&quot;&gt;this&lt;/a&gt; issue for arch linux which indicates it was fixed for linux 4.9.6.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After asking about the issue on reddit it was suggested to add this to my configuration.nix&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;boot.kernelPackages = pkgs.linuxPackages_latest&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After adding this and performing a full update it appears to have solved my problem.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;As a note this command will get the previous log for X&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;journalctl -u display-manager --boot=-1&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>connecting to wifi from nixos minimal install cd</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/06-20-connecting-to-wifi-from-nixos-minimal-install-cd.html"/>
        <updated>2017-06-20T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/06-20-connecting-to-wifi-from-nixos-minimal-install-cd.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;One step in installing nixos I had trouble performing was connecting to wifi. On the minimal install boot wpa_supplicant is installed but there is no service. There are a few instructions for this online but this is what I did to get it working.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_wpa_supplicant_conf&quot;&gt;wpa_supplicant.conf&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;nano /etc/wpa_supplicant.conf #this file can really be anywhere&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Once the file is opened add&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;ctrl_interface=/var/run/wpa_supplicant
ctrl_interface_group=0&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Then start wpa_supplicant for your interface.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;wpa_supplicant -B -i iwp3s0 -c /etc/wpa_supplicant.conf&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Once wpa_supplicant is running on your system you can add a network through the cli.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;wpa_cli
scan
scan_results
add_network
set_network 0 ssid &quot;...&quot;
set_network 0 psk &quot;...&quot;
enable_network 0
quit&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Next test the connection.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;ping www.google.com&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>ivy remote configs</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/06-20-ivy-remote-configs.html"/>
        <updated>2017-06-20T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/06-20-ivy-remote-configs.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I found an issue in an ivy.xml that resulted in hamcrest not being added to the test configuration. The junit dependency looked like this:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;&amp;lt;dependency org=&quot;junit&quot; name=&quot;junit&quot; rev=&quot;4.12&quot; conf=&quot;test-&amp;gt;master&quot;/&amp;gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The problem is &lt;code&gt;test-&amp;gt;master&lt;/code&gt; means only get the main artifacts from the remote dependency (no transitives). The fix is to change &lt;code&gt;test-&amp;gt;master&lt;/code&gt; to &lt;code&gt;test-&amp;gt;default&lt;/code&gt;. &lt;code&gt;master&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; are the only two values available for a maven repository.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>switching to nixos</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/06-19-switching-to-nixos-again.html"/>
        <updated>2017-06-19T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/06-19-switching-to-nixos-again.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I have decided to switch from gentoo to nixos. I tried nixos over a year ago but had a lot of troubles. This was probably because I used the unstable release and couldn’t really get gradle stuff to work. This time I will only use the stable release and try to import newer stuff from unstable if I decided I need it. Hopefully I will not have as many problems as I did with the unstable release.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;First, I downloaded the latest minimal install cd.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Second, I backed up my stuff.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;rsync -r /home/john /mnt/backup&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The biggest worry I had with this install was getting the partitions and boot setup. A few years ago I had to replace my motherboard because installing the uefi boot loader completely messed up the whole machine. I also considered using zfs but I’m not sure I want to dive into that technology yet. So I decided to reuse the setup I used for gentoo. This helped save time and gave me less to worry about during the whole process.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The partition setup is somewhat unique and I was able to piece it together by reading about setting up mdadm, luks, and lvm with gentoo and arch. The partitions look something like this:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;partitions:

/dev/sda
|----/dev/sda1----|------------/dev/sda2------------|

/dev/sdb
|----/dev/sdb1----|------------/dev/sdb2------------|&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The the first partitions of each drive are setup by mdadm as a raid1. The second partitions are setup by mdadm as a raid0. This is the logical view of the raid arrays.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;raid arrays:

|----/dev/md/0----|------------/dev/md/1------------|&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;/dev/md/0 is setup with ext4 and it becomes /boot in the filesystem. /dev/md/1 is slightly more complicated. It is a luks encrypted drive which contains lvm’s volume group 0. vg0 contains swap and &apos;/&apos;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I know there is a lot more risk with raid0 but I also have a third drive which is used for backups using obnam. This mitigates any real risks of losing data.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;backup partition:

/dev/sdc
|------------/dev/sdc1------------|&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I read a few posts on reddit where the users coppied the current &apos;/&apos; to a different directory before starting the install. I decided to try this out since it would make recovering my home directory very easy. The gentoo root was moved to /gentoo-root. This ended up helping a lot when I needed to setup the mdadm.conf. I just copied most of the content from the gentoo-root.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Getting nixos to use the gentoo setup went smoothly. Here is the grub setup.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;boot.loader.grub.enable = true;
boot.loader.grub.version = 2;
boot.loader.grub.devices = [ &quot;/dev/sda&quot; &quot;/dev/sdb&quot; ];&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Grub needs to be installed on both drives (/dev/sda and /dev/sdb) so that if either goes down it will still boot (not sure this would really work given the raid0). Nixos can open the luks encrypted drive by setting up &lt;code&gt;boot.initrd.luks.devices&lt;/code&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;boot.initrd.luks.devices = [
  {
    name = &quot;root&quot;;
    device = &quot;/dev/md/1&quot;;
    preLVM = true;
  }
];&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This sets up initrd to open the luks device before searching for lvm volumes. If this doesn’t happen before the lvm scan the boot will fail to find swap and &apos;/&apos;. The concept for this setup is &apos;lvm on luks&apos;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Remember how my machine has two raid arrays? An interesting thing happens when you have two raid arrays. On each boot which one gets named /dev/md126 is non-deterministic. As a corollary which one gets named /dev/md127 is non-deterministic. It is impossible to determine which array contains the luks device ahead of time using these names. I found that sometimes the boot would ask for the passphrase and sometimes it would not be able to start at all. The solution is to setup named devices in mdadm.conf and use the correct name in the luks config above. Luckily nixos supports mdadm.conf within initrd.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;boot.initrd.mdadmConf = &apos;&apos;
  DEVICE /dev/sda1 /dev/sdb1
  DEVICE /dev/sda2 /dev/sdb2
  ARRAY /dev/md/0 metadata=1.2 UUID=2a7ffaec:fd80f34a:48cebc26:5caf521c name=g1:0
  ARRAY /dev/md/1 metadata=1.2 UUID=70e06d78:4e14590a:a4e13279:9e6e387f name=g1:1
&apos;&apos;;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This added the names /dev/md/0 and /dev/md/1 which should be used at boot instead of /dev/md126 and /dev/md127. This solved all the problems with initrd finding the luks device at boot.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Getting this right was a real pain. I’m not going to say nixos makes it easier because I learned a lot going through this with gentoo. I believe the gentoo experience made setting this up in nixos easier.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>sonar way is the wrong way</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/02-07-sonar-way-is-the-wrong-way.html"/>
        <updated>2017-02-07T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/02-07-sonar-way-is-the-wrong-way.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Codenarc is a static code analysis tool for groovy. It is the same tool &lt;a href=&quot;http://sonarqube.com&quot;&gt;sonarqube.com&lt;/a&gt; uses to to publish its results. The &lt;a href=&quot;https://github.com/moaxcp/graph-dsl&quot;&gt;graph-dsl&lt;/a&gt; project is setup to use codenarc for local development and &lt;a href=&quot;http://sonarqube.com&quot;&gt;sonarqube.com&lt;/a&gt; for continuous integration. There is just one problem with &lt;a href=&quot;http://sonarqube.com&quot;&gt;sonarqube.com&lt;/a&gt;, it only uses 59 rules rather than the 353 rules available. I wanted to find a way to send all of those rules to sonarqube.com that were missing.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To start I found &lt;a href=&quot;https://github.com/SonarQubeCommunity/sonar-groovy&quot;&gt;sonar-groovy&lt;/a&gt; this is a plugin for sonar-runner which scans groovy code. It can be configured to look at a codenarc report within groovy.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Note: this porject uses gradle so the following is gradle configurations to accomplish this.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;First, codenarc needs to be setup to output xml formatted reports.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;codenarc {
    reportFormat = &apos;xml&apos;
}&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Next, the sonarqube plugin needs to be configured to use that report.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;sonarqube {
    properties {
        property &apos;sonar.groovy.codenarc.reportPath&apos;, codenarcMain.getReports().getXml().getDestination()
    }
}&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This results in lots a messages that look like this&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;No such rule in Sonar, so violation from CodeNarc will be ignored:&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;It appears that &lt;a href=&quot;http://sonarqube.com&quot;&gt;sonarqube.com&lt;/a&gt; is setup with Quality Profiles. These profiles determine which rules are actually turned on. The default for groovy projects only enables 59 of 353 rules. For &lt;a href=&quot;https://github.com/moaxcp/graph-dsl&quot;&gt;graph-dsl&lt;/a&gt; it is not possible to modify the Quality Profile and as a result &lt;a href=&quot;http://sonarqube.com&quot;&gt;sonarqube.com&lt;/a&gt; does not seem very useful for groovy projects.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Testing graph-dsl</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/01-19-testing-graph-dsl.html"/>
        <updated>2017-01-19T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/01-19-testing-graph-dsl.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;graph-dsl is a project I started so I could write graphs and algorithms easily. Over the past year testing has become important to the way I write code. With graph-dsl I wanted to learn more about Test Driven Development and using different tools like gradle, spock, jacoco, and sonarqube.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Gradle is the build tool I am most familiar with. It combines the best features from groovy, ant, ivy, and maven. It supports massive multiproject builds and it is easy to override any convention. It also has a large community for support and it is constantly updated.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Spock is a testing framework built on top of JUnit. It provides an easy way to describe code and what it is expected to do. Spock is not really about testing units of code and integrating them. It is all about writing specifications and testing expected features of the code. The perspective is different but the end result is similar.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Adding spock to a gradle project is easy. Just add the dependency.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;dependencies {
    testCompile &apos;org.spockframework:spock-core:1.0-groovy-2.4&apos;
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;In spock it is not easy to separate unit tests from integration tests and run them separately. There isn’t really a convention for naming tests as there is in JUnit and it is common to end test classes with *Spec. When testing with groovy (in JUnit and Spock) it is helpful to use strings as method names.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;def &apos;can get correct second unvisited vertex&apos;() {
    setup:
    def graph = new Graph()
    graph.with {
        vertex &apos;step1&apos;
        vertex &apos;step2&apos;
    }
    def colors = [&apos;step1&apos;: Graph.DepthFirstTraversalColor.GREY]

    when:
    def name = graph.getUnvisitedVertexName(colors)

    then:
    name == &apos;step2&apos;
}&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;When a test method fails the string should try to point out what feature failed. Spock is just one tool I am using for testing. I also rely on jacoco to ensure I have good test coverage.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Jacoco is a great tool for viewing code coverage for tests or anything else running in the jvm. Gradle makes using jacoco easy. To use jacoco in gradle apply the plugin.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;apply plugin: &apos;jacoco&apos;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;If you plan on following TDD it is easy to see the coverage as you build tests and add code. It is not so easy to see what code each individual test is covering. There is some support to view this in sonar when using jacoco with maven but I haven’t found support in gradle.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;There is a trick to using jacoco with groovy that took me a while to figure out. When groovy is compiled there are some optimizations added to the resulting bytecode. These optimizations show up in jacoco as extra instructions that may not be covered in your tests. It is better to turn off these optimizations when running tests with jacoco. To do this I added the following to my build.gradle&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;gradle.taskGraph.whenReady { graph -&amp;gt;
    if (graph.hasTask(&apos;:jacocoTestReport&apos;) || graph.hasTask(&apos;:sonarqube&apos;)) {
        compileGroovy.groovyOptions.optimizationOptions.all = false
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This will turn off optimizations any time jacocoTestReport or sonarqube will be run.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Sonarqube is a tool that performs static code analysis. It provides reports on bugs and vulnerabilities like and has a nice user interface. It also provides a central place to view test reports and code coverage from jacoco (I could only find info about this for maven). Metrics are rated in sonarqube which allows the developer to see the health of a project.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Adding sonarqube is easy&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;apply plugin: &apos;org.sonarqube&apos;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Using sonarqube.com is free. Once you have an account set up and access key and add some entries to gradle.properties.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;systemProp.sonar.host.url=https://sonarqube.com/
systemProp.sonar.login=sonar login&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;sonar seems to calculate line coverage differently than jacoco. It is usually a few percentage points higher.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Java Navive Access in Groovy</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/01-07-java-native-access-in-groovy.html"/>
        <updated>2017-01-07T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/01-07-java-native-access-in-groovy.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Using &lt;a href=&quot;https://github.com/java-native-access/jna&quot;&gt;Java Native Access&lt;/a&gt; in a groovy script seems easy enough. Just use grape to grab the dependency and use it an a simple groovy script.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;#!/usr/bin/env groovy

// https://mvnrepository.com/artifact/net.java.dev.jna/jna
@Grapes(
    @Grab(group=&apos;net.java.dev.jna&apos;, module=&apos;jna&apos;, version=&apos;4.2.2&apos;)
)

import com.sun.jna.Library
import com.sun.jna.Native
import com.sun.jna.Platform

public interface CLibrary extends Library {
    CLibrary INSTANCE = (CLibrary) Native.loadLibrary((Platform.isWindows() ? &apos;msvcrt&apos; : &apos;c&apos;), CLibrary.class)

    void printf(String format, Object... args)
}

CLibrary.INSTANCE.printf(&quot;Hello, World\n&quot;)
for(int i = 0; i &amp;lt; args.length; i++) {
    CLibrary.INSTANCE.printf(&apos;Argument %d: %s\n&apos;, i, args[i])
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The &lt;a href=&quot;https://github.com/java-native-access/jna/blob/master/www/DynamicallyTypedLanguages.md&quot;&gt;Dynamically Typed Languages&lt;/a&gt; article suggests that we can be smart about using jna in Jython and JRuby but what about groovy? Groovy supports intercepting missing methods but I’m going with just defining the methods. There doesn’t seem to be a way to map the invoke methods with the correct return type for the c methods. For example printf is a void method but in the article it would use invokeInt. This is not correct.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;#!/usr/bin/env groovy

// https://mvnrepository.com/artifact/net.java.dev.jna/jna
@Grapes(
    @Grab(group=&apos;net.java.dev.jna&apos;, module=&apos;jna&apos;, version=&apos;4.2.2&apos;)
)

import com.sun.jna.NativeLibrary
import com.sun.jna.Platform

public class CLib {
    static def lib = NativeLibrary.getInstance(Platform.isWindows() ? &apos;msvcrt&apos; : &apos;c&apos;)
    static def printf(format, args) {
        lib.getFunction(&apos;printf&apos;).invokeVoid([format, args])
    }
}

CLib.printf(&quot;Hello, World\n&quot;)
for(int i = 0; i &amp;lt; args.length; i++) {
    CLib.printf(&apos;Argument %d: %s\n&apos;, i, args[i])
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;JNA makes it very easy to map native code in groovy. Please check out the &lt;a href=&quot;https://github.com/java-native-access/jna&quot;&gt;project&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>epson xp-950 on gentoo</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2017/01-02-epson-xp-950-on-gentoo.html"/>
        <updated>2017-01-02T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2017/01-02-epson-xp-950-on-gentoo.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Adding a printer/scanner on gentoo can be easy or it can be hard. Here are some notes on how I did it.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_the_printer&quot;&gt;The Printer&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;My printer is an Epson XP-950. My wife picked it out and I only lightly check to see if it supported linux by checking the provided drivers on the &lt;a href=&quot;http://download.ebz.epson.net/dsc/search/01/search/?OSC=LX&quot;&gt;support website&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_adding_the_printer_bits&quot;&gt;Adding the printer bits&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Epson’s print drivers are provided through &lt;a href=&quot;https://packages.gentoo.org/packages/net-print/epson-inkjet-printer-escpr&quot;&gt;net-print/epson-inkjet-printer-escpr&lt;/a&gt; on gentoo.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;emerge -av net-print/epson-inkjet-printer-escpr&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;These are the drivers provided through the epson downloads page I had checked before the printer was purchaces. Since I already have cups installed all I needed to do was install this package and add the printer through cups. XP-950 is one of the printers made available to cups through this package.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_adding_the_scanner_bits&quot;&gt;Adding the scanner bits&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The scanner also has drivers through the &lt;a href=&quot;http://download.ebz.epson.net/dsc/search/01/search/?OSC=LX&quot;&gt;epson download page&lt;/a&gt; but these are not installed through gentoo. On gentoo it is possible to setup scanners through &lt;a href=&quot;https://wiki.gentoo.org/wiki/SANE&quot;&gt;SANE&lt;/a&gt;. I installed xsane:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;emerge -av media-gfx/xsane&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;xsane is about as bad as the epson scanner software for windows and android but it seems to work so far. I was able to find a bug pretty quickly:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;set pages to two&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;select multipage&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;click scan&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;click cancel&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;the program crashes&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;It also randomly decides there is no scanner for some reason.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_other_options&quot;&gt;Other options&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;simple scan&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;This permenantily does not find the scanner.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;gimp&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Not tried yet.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>obnam on gentoo</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/09-09-obnam-on-gentoo.html"/>
        <updated>2015-09-09T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/09-09-obnam-on-gentoo.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;My system is a Dell Precision M4600 laptop with gentoo installed. It is great for travel and moving to different rooms in the home. Unfortunately, it does not have full backups. I currently have dropbox for my personal data but after after working on this system for a year, I would like to have backups for the entire system. The solution is to have real backups along with dropbox.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_dropbox&quot;&gt;Dropbox&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;I love dropbox but there are a few problems with only using dropbox as a backup system. First, it does not work well with gir repositories. It is a duplicate version control system that sometimes has conflicts. When dropbox has a conflict for a git repository it can be annoying but I really want my repositories to be backed up. Second, if my system goes down I have to download the entire dropbox folder (40+GB). Finally, it doesn’t back up the entire system.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This is what I like about dropbox&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;quickly sync with phone (pictures/videos)&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;over the network sync with other computers&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;30 days of history&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;works anywhere with internet&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_the_plan&quot;&gt;The Plan&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;My plan is to have a backup system that works well for me. Something that doesn’t require an external hard drive and allows me to do backups while traveling. Right now I only have an external drive so this is it for now:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;plug in and mount external drive&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;setup obnam to backup system to drive&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;move git repositories outside of Dropbox folder&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;In the future:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;install internal drive (2TB)&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;setup obnam to backup system to drive&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;If I am able to get a server setup at home:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;create repository on server&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;setup obnam to backup system to server along with internal drive&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Obnam looks like a great system. It has one command with many features. The features I’m interested in are the ease of use and encryption. Eventually, I would like to have my system encrypted and have the backup encrypted as well.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Currently, I have an external 1TB drive to put backups on. It is not ideal because I hate having extra things attached to my laptop but it will let me setup backups without having to buy a new harddrive (I tried taking it apart but the usb is permanently attached to the drive).&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_mounting_the_drive&quot;&gt;Mounting the drive&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;I have autofs installed and it will automatically mount my drive to /mnt/auto/sdc1.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_configuring_obnam&quot;&gt;Configuring obnam&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Gentoo comes with a well documented config file for obnam. First, I set the repository to /mnt/auto/sdc1/obnam. I enabled compression with&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;compress-with = deflate&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;I added root, exclude, and one-file-system&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;root = /bin, /boot, /etc, /home, /lib32, /lib64, /opt, /root, /sbin, /usr, /var
exclude = ^/var/tmp/, .*\.pid$, \.cache/, ^/usr/src/linux.*/, ^/var/tmp/portage/, .*/.local/share/Trash/
one-file-system = true&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;I may just change root to / because one-file-system skips everything I don’t want to backup.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;I enabled logging&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;log = /var/log/obnam/obnam.log
log-level = debug
log-keep = 10
log-max = 0
log-mode = 0600&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;I forgot to setup the forget policy but according to the documentation this isn’t needed until the backups build up.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;Once the config is finished it is easy to start obnam&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class=&quot;listingblock&quot;&gt; 
    &lt;div class=&quot;content&quot;&gt; 
     &lt;pre&gt;obnam backup&lt;/pre&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Spring Boot Auto-completion breaks xdm</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/08-28-spring-boot-auto-completion-breaks-xdm.html"/>
        <updated>2015-08-28T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/08-28-spring-boot-auto-completion-breaks-xdm.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After setting up the spring boot cli auto-completion feature everything was working fine. Typing spring and then hitting tab in the console brought up the list of spring commands as promised. What I did not expect was after restarting my computer the xdm service complained about spring shell-completion.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt; * Caching service dependencies ...                  [ ok ]
 * Stopping xdm ...
 * start-stop-daemon: no matching processes found    [ ok ]
 * Setting up xdm ...
/opt/spring-1.2.5.RELEASE/shell-completion/bash/spring: line 16: syntax error near unexpected token `&amp;lt;&apos;
/opt/spring-1.2.5.RELEASE/shell-completion/bash/spring: line 16: `      done &amp;lt; &amp;lt;(spring hint ${cword} ${words[*] [ ok ]&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;In a previous post I setup profile.d to create a spring cli environment for all users on my system. Once I remove the sourcing of shell-completion everything is fine but I want this to be fixed.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After some research on the bash &lt;a href=&quot;https://github.com/spring-projects/spring-boot/pull/3848&quot;&gt;here document&lt;/a&gt; the &lt;a href=&quot;https://github.com/spring-projects/spring-boot/pull/3848&quot;&gt;completion script&lt;/a&gt; is using, I was not able to find the solution. The problem is not in the here-document but in the header of the script. After adding the correct sha-bang &lt;code&gt;#!/bin/bash&lt;/code&gt; I was able to start xdm normally. I’m guessing that the double redirection with a here-document is not allowed in sh but is in bash and that xdm runs scripts in sh unless the sha-bang is present.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I added a &lt;a href=&quot;https://github.com/spring-projects/spring-boot/pull/3848&quot;&gt;pull&lt;/a&gt; request to spring-boot to fix the problem.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>adding posts to a github blog</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/08-26-adding-posts-to-a-github-blog.html"/>
        <updated>2015-08-26T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/08-26-adding-posts-to-a-github-blog.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I just had this great idea to use github.com’s editor for creating posts in this blog. Here is how it works.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;olist arabic&quot;&gt; 
 &lt;ol class=&quot;arabic&quot;&gt; 
  &lt;li&gt; &lt;p&gt;go to the repo moaxcp.github.io/_posts and click on the + to add a file&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;create a file name and fill in the post&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;commit to new branch for drafts or master if the post is good&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;accept the pull request to publish the draft&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I’ve been using vi and git on my laptop to write posts but I would much rather just use my broswer. The problem with the github editor is no spell checking but I have the same problem with my current vi setup.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I’m sure this is known to many github users but it has taken me a while to put this idea together.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This is the first post I am doing this with so lets see how it goes.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>pipe-service</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/08-26-pipe-service.html"/>
        <updated>2015-08-26T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/08-26-pipe-service.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I have been working on an idea for a microservice called &lt;a href=&quot;https://github.com/moaxcp/pipe-service&quot;&gt;pipe-service&lt;/a&gt;. It will take output from one service and send it as input to another service. The services I have in mind are http(s) and the variety of ftp services.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The project is called pipe-service as a reference to command line pipes. Pipes allow the output of one command to be used as input to another command. One example of this is ps and grep. When a user needs to see if a specific process is running he will use a pipe between the two commands.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;ps aux | grep --color jboss&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Bash will take the output stream of &lt;code&gt;ps aux&lt;/code&gt; and make it available as the input stream of the grep program for processing.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;pipe-services will work in a similar fashion.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;get http://example.com/service... | post http://nextexample.com/service2...&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Another example is to send the input to ftp. This will transfer a file from http to ftp.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;get http://example.com/file.zip | put ftp://nextexample.com/home/john/file.zip&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Other services could be created to faciliate an entire pipeline of processing.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;get rest object | post transform-service
get transform-service | post neo4j-service&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I plan on using &lt;a href=&quot;http://projects.spring.io/spring-boot/&quot;&gt;spring-boot&lt;/a&gt; since it provides so much out of the box. It would also be nice to write an &lt;a href=&quot;https://angularjs.org/&quot;&gt;angular&lt;/a&gt; front end. Using something like &lt;a href=&quot;https://jhipster.github.io/&quot;&gt;JHipster&lt;/a&gt; may help with that.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Installing Spring Boot CLI in Gentoo</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/08-26-installing-spring-boot-cli-in-gentoo.html"/>
        <updated>2015-08-26T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/08-26-installing-spring-boot-cli-in-gentoo.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;First, download the latest spring-boot-cli&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Then untar to /opt&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;untar -xf spring-boot-cli-1.2.5.RELEASE-bin.tar.gz&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Next, create a file in profile.d to setup the environment &lt;code&gt;vi /etc/profile.d/spring-cli.sh&lt;/code&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;\#!/bin/bash
export SPRING_HOME=/opt/spring-1.2.5.RELEASE
PATH=${SPRING_HOME}/bin:${PATH}
export PATH&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Finally, restart the terminal or source the file &lt;code&gt;. vi /etc/profile.d/spring-cli.sh&lt;/code&gt;&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Gentoo Audit Log</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/08-18-gentoo-audit-log.html"/>
        <updated>2015-08-18T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/08-18-gentoo-audit-log.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Gentoo does not seem to have a lot of info on auditing unless it is under the hardened project. I am trying to get basic audit logging of users attempting to log into the system. It seems two things are needed: a properly configure kernel and the auditd service running.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;My kernel already has Auditing support enabled so the only thing I need to install is sys-process/audit.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This added /etc/init.d/auditd. Now I can add it to the correct run level and run it.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After looking at syslog-ng, it looks like that is what I should go with. It can be configured to create an auth.log which shows what I want. The default config that comes with gentoo is not very helpful. It only saves messages to the messages log file.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;By following &lt;a href=&quot;http://www.gentoo-wiki.info/Syslog-ng&quot;&gt;this&lt;/a&gt; guide I was able to get logging setup.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>sometime gentoo blocks</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/08-10-sometimes-gentoo-blocks.html"/>
        <updated>2015-08-10T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/08-10-sometimes-gentoo-blocks.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I was trying to update my system which resulted in a blocked package.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;emerge -avuUND --withb-deps=y @world

* Error: The above package list contains packages which cannot be
* installed at the same time on the same system.

  (x11-libs/libfm-extra-1.2.3:0/4.3.0::gentoo, ebuild scheduled for merge) pulled in by
    ~x11-libs/libfm-extra-1.2.3 required by (x11-libs/libfm-1.2.3-r1:0/4.3.0::gentoo, ebuild scheduled for merge)
    x11-libs/libfm-extra required by (lxde-base/menu-cache-1.0.0-r1:0/2::gentoo, ebuild scheduled for merge)&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After reading the change log for the ebuild it turns out the package was changed so users would unmerge the package and then merge it again.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;emerge --unmerge x11-libs/libfm&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now my system is happy and being updated.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>bash day</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/06-26-bash-day.html"/>
        <updated>2015-06-26T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/06-26-bash-day.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Digging deeper into bash can be rewarding. Today, and possibly this weekend, I am going to focus on getting bash looking good (in xterm).&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_ps1&quot;&gt;PS1&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;In a &lt;a href=&quot;http://moaxcp.github.io/2015/04/15/ps1-in-gentoo.html&quot;&gt;previous post&lt;/a&gt; I wrote about changing the directory output using \W instead of \w. This helps shorten the prompt when working in deep directories. Today I found &lt;a href=&quot;https://wiki.archlinux.org/index.php/Color_Bash_Prompt&quot;&gt;this&lt;/a&gt; wiki page which shows how to add the output of the previous command to the prompt for debugging.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Every program that completes needs to return a status code. 0 means everything is ok, non-0 means something went wrong. Adding this to PS1 is great for testing commands like &lt;code&gt;grep -q&lt;/code&gt; before adding it to a script. I setup the output with the green check box for 0 and red x for non-0.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;In gentoo, this causes problems. My prompt shows a red and green box instead of the check box and x. Since these are unicode characters and xterm can be built without unicode support, the first thing I checked is the use flags.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;john-gentoo john # emerge -av xterm

 * IMPORTANT: 2 news items need reading for repository &apos;gentoo&apos;.
 * Use eselect news read to view new items.

These are the packages that would be merged, in order:

Calculating dependencies... done!
[ebuild   R    ] x11-terms/xterm-314::gentoo  USE=&quot;openpty truetype unicode -Xaw3d -toolbar&quot; 0 KiB

Total: 1 package (1 reinstall), Size of downloads: 0 KiB

Would you like to merge these packages? [Yes/No]&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This shows that xterm was built with the unicode use flag turned on so the problem is not xterm.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;On &lt;a href=&quot;https://wiki.gentoo.org/wiki/UTF-8&quot;&gt;this&lt;/a&gt; guide I found this:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;quoteblock&quot;&gt; 
   &lt;blockquote&gt; 
    &lt;div class=&quot;paragraph&quot;&gt; 
     &lt;p&gt;It is wise to add unicode to the global USE flags in /etc/portage/make.conf&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;After following this guidance I did not see a change.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Further in the guide is states that xterm should be started with uxterm to support unicode. Even then I have the same problem. After these changes I am sure either my font does not support these characters or my fonts are not set correctly.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;sect2&quot;&gt; 
   &lt;h3 id=&quot;_bin_testps1font_sh&quot;&gt;bin/testps1font.sh&lt;/h3&gt; 
   &lt;div class=&quot;paragraph&quot;&gt; 
    &lt;p&gt;{% highlight bash %}&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h1 id=&quot;_bin_bash&quot; class=&quot;sect0&quot;&gt;!/bin/bash&lt;/h1&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;cd /usr/share/consolefonts for i in * do setfont echo &quot;testing &amp;gt;&amp;gt; $i &amp;lt;&amp;lt; font&quot; setfont $i echo -e &quot;\0342\0234\0227&quot; echo -e &quot;\0342\0234\0223&quot; read clear done {% endhighlight %}&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This tests each console font by printing out the PS1 characters and waiting for input. I could not find a console font that has a checkmark and x. I am changing the characters to something more useful.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I also want to shorten the computer name so PS1 is not so long. This can be changed in &lt;code&gt;/etc/conf.d/hostname&lt;/code&gt;. I am changing it to g1.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_consolefont&quot;&gt;consolefont&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;rc-update add consolefont boot rc-service consolefont start I now have consolefont setup. The font can be changed in /etc/conf.d/consolefont to one of the fonts in /usr/share/consolefonts&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_xfonts&quot;&gt;Xfonts&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;I am following &lt;a href=&quot;http://kev009.com/wp/2009/12/getting-beautiful-fonts-in-gentoo-linux/&quot;&gt;this&lt;/a&gt; guide and restarting. This has setup X with nice fonts but not xterm.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_xresources&quot;&gt;.Xresources&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;my .xinitrc file only loads .Xresources not .Xdefaults. It is directly copied from /etc/X11/xinitrc. I basically copied &lt;a href=&quot;https://wiki.mpich.org/mpich/index.php/Configure_xterm_Fonts_and_Colors_for_Your_Eyeball&quot;&gt;this&lt;/a&gt; and set the faceSize to 8 instead of 11.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>upgrading vagrant box</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/06-19-upgrading-vagrant-box.html"/>
        <updated>2015-06-19T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/06-19-upgrading-vagrant-box.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I’m upgrading &lt;a href=&quot;https://vagrantcloud.com/moaxcp/boxes/gentoo64&quot;&gt;moaxcp/gentoo64&lt;/a&gt; and these are my notes.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After an &lt;code&gt;emerge --sync&lt;/code&gt; and &lt;code&gt;emerge -avuND @world&lt;/code&gt; I found that gentoo release a new kernel (4.0.5). I followed &lt;a href=&quot;https://wiki.gentoo.org/wiki/Kernel/Upgrade&quot;&gt;this&lt;/a&gt; to upgrade making sure to use –lvm. I added a new script /root/buildkernel.sh which will build the kernel with the correct options. I made sure to remove the old kernel to save space.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;There is a script cleanup_diskspace.sh which will remove some files and make the .box file smaller when it is built.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;When I originally created the vm I used lvm and made the root partition 7GB. Now is the time to resize it to something more useful. I changed the disk size to 120GB using &lt;code&gt;VBoxManage modifyhd gentoo-vagrant.vdi --resize 122880&lt;/code&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;LVM was not installed on the system even though the modules are in the kernel. When installing lvm there was an error related to &lt;a href=&quot;https://forums.gentoo.org/viewtopic-t-986982.html?sid=6a911ac3752245becdc98096c9dd8081&quot;&gt;this thread&lt;/a&gt;. The advice on the thread is to remove parallel compilation by setting MAKEOPTS=&quot;-j1&quot;. After this change boost still did not compile. I added the ~amd64 keyword for dev-libs/boost to pick up a newer package. Even then I still had errors.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The problem with parallel compilation is the amount of memory used. I increased the memory and got a different error. This time the error is No space left on device.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    df -h

    Filesystem            Size  Used Avail Use% Mounted on
    udev                   10M  4.0K   10M   1% /dev
    /dev/mapper/vg0-root  6.8G  4.5G  2.0G  70% /
    tmpfs                 201M  388K  201M   1% /run
    shm                  1005M     0 1005M   0% /dev/shm
    cgroup_root            10M     0   10M   0% /sys/fs/cgroup&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This shows root as only 70% full but checking the inode count I get&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    df -i

    Filesystem           Inodes  IUsed  IFree IUse% Mounted on
    udev                 256513    409 256104    1% /dev
    /dev/mapper/vg0-root 458752 458745      7  100% /
    tmpfs                257103    355 256748    1% /run
    shm                  257103      1 257102    1% /dev/shm
    cgroup_root          257103      4 257099    1% /sys/fs/cgroup&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This makes me want to rethink the entire gentoo64 build. I shouldn’t have to use lvm and I’m not sure why I installed it. I think I’m going to rebuild the whole system without lvm and make a larger hard drive.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>provisioning java on gentoo-with-vagrant</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/06-15-provisioning-java-on-gentoo-with-vagrant.html"/>
        <updated>2015-06-15T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/06-15-provisioning-java-on-gentoo-with-vagrant.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I wrote a &lt;a href=&quot;https://github.com/moaxcp/fileServices/blob/master/Vagrantfile&quot;&gt;small script&lt;/a&gt; that will provision &lt;a href=&quot;https://packages.gentoo.org/package/dev-java/oracle-jdk-bin&quot;&gt;oracle-jdk-bin-1.8.0&lt;/a&gt; on my &lt;a href=&quot;https://atlas.hashicorp.com/moaxcp/boxes/gentoo64/versions/0.0.2&quot;&gt;gentoo64&lt;/a&gt; box. The script can be called multiple times through &lt;code&gt;vagrant reload --provision&lt;/code&gt; and it will only install the jdk once. Oracle’s jdk has some restrictions. On gentoo the license needs to be accepted and a file needs to be manually downloaded and added to &lt;code&gt;/usr/portage/distfiles&lt;/code&gt;. My Vagrantfile adds a share to &lt;code&gt;/usr/portage/distfiles&lt;/code&gt; on the guest machine in &lt;code&gt;/distfiles&lt;/code&gt;. The shell script will copy the file if it doesn’t exist, accept the license, and install the package. The only requirement is &lt;code&gt;jdk-8u45-linux-x64.tar.gz&lt;/code&gt; needs to be located at &apos;/usr/portage/distfiles&apos;. This can be changed in your own project by editing the share in your Vagrantfile.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>webcam</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/06-13-webcam.html"/>
        <updated>2015-06-13T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/06-13-webcam.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;My webcam doesn’t work on my gentoo machine. I actually have a list of hardware that I want to make sure works.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;ulist&quot;&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;webcam&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;CAC card reader&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;hdmi out&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;bluetooth&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;external dvd burner&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The gentoo wiki doesn’t seem to have a page for webcams but &lt;a href=&quot;https://wiki.archlinux.org/index.php/Webcam_setup&quot;&gt;arch linux&lt;/a&gt; does.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h1 id=&quot;_using_lsusb&quot; class=&quot;sect0&quot;&gt;Using lsusb&lt;/h1&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To view all devices&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    lsusb

    Bus 002 Device 003: ID 0a5c:5800 Broadcom Corp. BCM5880 Secure Applications Processor
    Bus 002 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub
    Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
    Bus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
    Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
    Bus 001 Device 004: ID 1bcf:280b Sunplus Innovation Technology Inc.
    Bus 001 Device 003: ID 413c:8187 Dell Computer Corp. DW375 Bluetooth Module
    Bus 001 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub
    Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To view the details of the web cam&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    lsusb -s 001:004

    Bus 001 Device 004: ID 1bcf:280b Sunplus Innovation Technology Inc.&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To view more details&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    lsusb -v -s 001:004

    Bus 001 Device 004: ID 1bcf:280b Sunplus Innovation Technology Inc.
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               2.00
      bDeviceClass          239 Miscellaneous Device
      bDeviceSubClass         2
      bDeviceProtocol         1 Interface Association
      bMaxPacketSize0        64
      idVendor           0x1bcf Sunplus Innovation Technology Inc.
      idProduct          0x280b
      bcdDevice            3.10
      iManufacturer           1 CN0CJ3P27248724CBBDJA01
      iProduct                2 Laptop_Integrated_Webcam_FHD
      iSerial                 0
      bNumConfigurations      1
    ...&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Check for messages about the device&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    dmesg | less

    typing /usb+enter will highlight the word usb. Type n to go to next match.

    [    9.505824] usb 1-1.5: new high-speed USB device number 4 using ehci-pci
    [    9.787353] usb 1-1.5: New USB device found, idVendor=1bcf, idProduct=280b
    [    9.787356] usb 1-1.5: New USB device strings: Mfr=1, Product=2, SerialNumber=0
    [    9.787357] usb 1-1.5: Product: Laptop_Integrated_Webcam_FHD
    [    9.787358] usb 1-1.5: Manufacturer: CN0CJ3P27248724CBBDJA01&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now we know the device is recognized but it doesn’t look like a driver is being loaded. This is indicated by a missing /dev/video0. Devices are assigned by udev. After trying to test using&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    udevadm --debug test /sys/class/video4linux/video0&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I found that I do not have video4linux. This could mean the kernel does not support video4linux.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;running my buildkernel.sh I found that I did not have the kernel setup for webcams.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Device Drivers –&amp;gt; &amp;lt;M&amp;gt; Multimedia support —&amp;gt; [*] Cameras/video grabbers support [&lt;em&gt;] Media USB Adapters —&amp;gt; &amp;lt;M&amp;gt; USB Video Class (UVC) [&lt;/em&gt;] UVC input events device support (NEW)&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now that the kernel is compiled with these options I am restarting the system to see what happens. … The camera works in Cheese!&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Note: when making this post I was able to file an &lt;a href=&quot;https://github.com/tmux/tmux/issues/25&quot;&gt;issue&lt;/a&gt; with tmux.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Release of Vagrant Box</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/06-13-release-of-vagrant-box.html"/>
        <updated>2015-06-13T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/06-13-release-of-vagrant-box.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I just released a working version of my gentoo64 vagrant box. Setting it up is not as easy as vagrant makes it out to be. The issues are documented on the box page though. Please take a look at &lt;a href=&quot;https://atlas.hashicorp.com/moaxcp/boxes/gentoo64&quot;&gt;my gentoo vagrant box&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Uses&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;provision with java and now you can test your spring-boot applications.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;add your gentoo overlay and test your packages on a vm.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>gentoo vagrant box</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/06-10-gentoo-vagrant-box.html"/>
        <updated>2015-06-10T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/06-10-gentoo-vagrant-box.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I finally got my gentoo vagrant box up and running. There was a &lt;a href=&quot;https://github.com/mitchellh/vagrant/issues/5070#issuecomment-75738232&quot;&gt;bug&lt;/a&gt; in vagrant which I was able to find a workaround. I also had to make sure that the vboxsf module is loaded on boot. Otherwise, I got and error:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    Failed to mount folders in Linux guest. This is usually because
    the &quot;vboxsf&quot; file system is not available. Please verify that
    the guest additions are properly installed in the guest and
    can work properly. The command attempted was:

    mount -t vboxsf -o uid=`id -u vagrant`,gid=`getent group vagrant | cut -d: -f3` vagrant /vagrant
    mount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant

    The error output from the last command was:

    /sbin/mount.vboxsf: mounting failed with the error: No such device&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To fix this add&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    modules=&quot;vboxsf&quot;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;to the file /etc/conf.d/modules.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I was able to package the box after following another &lt;a href=&quot;https://github.com/mitchellh/vagrant/issues/5186#issuecomment-77355450&quot;&gt;fix&lt;/a&gt; but I won’t be able to release the package until the above problems are fixed in the original vm.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Gentoo Vagrant Box</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/06-06-gentoo-vagrant-box.html"/>
        <updated>2015-06-06T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/06-06-gentoo-vagrant-box.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Today I am working on a vagrant base box using gentoo and VirtualBox. I created a gentoo stage-3 vm in VirtualBox. But this is not enough to run gentoo in VirtualBox let alone as a vagrant box. There are a number of packages that need to be installed to make a stage-3 useful for virtual box and vagrant.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;ulist&quot;&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;virtualbox-guest-additions&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;acpi - for poweroff&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;sudo - to run commands without a password&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_virtualbox_guest_additions&quot;&gt;virtualbox-guest-additions&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;    emerge --ask app-emulation/virtualbox-guest-additions&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Keep in mind this package installs dbus. I recommend setting up dbus using &lt;a href=&quot;https://wiki.gentoo.org/wiki/D-Bus&quot;&gt;this guide&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_acpi&quot;&gt;acpi&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This is a service I did not have running on my own system. Follow &lt;a href=&quot;https://wiki.gentoo.org/wiki/ACPI&quot;&gt;this guide&lt;/a&gt; to get it setup. This will allow gentoo to shutdown when performing acpi shutdown in the Machine menu.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_sudo&quot;&gt;sudo&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This is required to allow the vagrant user to run commands without a password. It is easy to install and configure for vagrant. &lt;a href=&quot;https://wiki.gentoo.org/wiki/Sudo&quot;&gt;This&lt;/a&gt; is the gentoo guide for sudo.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Now I am following &lt;a href=&quot;http://docs.vagrantup.com/v2/boxes/base.html&quot;&gt;this guide&lt;/a&gt; to setup the base box.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Another option I would like to try is &lt;a href=&quot;https://github.com/d11wtq/gentoo-packer&quot;&gt;this&lt;/a&gt; setup.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>xdm with notion</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/06-01-xdm-with-notion.html"/>
        <updated>2015-06-01T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/06-01-xdm-with-notion.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Today I am attempting to switch to xdm as my display manager. I currently use LXDE but I am integrating parts of it with the notion windows manager. LXDM is not needed so I would like to replace it with the original xdm.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To start install xdm&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    emerge -av x11-apps/xdm&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;add xdm as the display manager&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    nano /etc/conf.d/xdm&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;set DISPLAYMANAGER to xdm&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The &lt;a href=&quot;https://wiki.gentoo.org/wiki/NVIDIA_Driver_with_Optimus_Laptops&quot;&gt;NVIDIA Driver with Optimus Laptops&lt;/a&gt; guide has some pointers on how to setup xdm correctly. The driver requres that some xrandr commands are executed on xinit. The instructions are easy to follow.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now that this is complete I am exiting to the console and running the xdm command.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;It turns out that xdm is not loading my .xinitrc file.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;From my research on how xdm works and gentoo I learned a few things and this is what I did to get things running.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;copy /etc/X11/xinit/xinitrc to ~/.xinitrc&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;make ~/.xinitrc executable&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;create ~/.xsession&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;add export XSESSION=notion to the top of the file&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;add any other commands you need to execute&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;add ~/.xinitrc as the final command&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The gentoo X system is setup in such a way that /etc/X11/xinitrc does everything most people want in a xinitrc file. The only problem is the file is not executable. By copying it to my home directory I am able to resuse it.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Gentoo’s xinitrc looks for a XSESSION varaible and executes that session. If the session is not found twm is started.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To get the default session to work x11-apps/xsm needs to be installed along with xterm an twm.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;xdm only executes a .xsession file in the user’s home directory using the authenticated user’s account.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;With this setup I am setting the XSESSION variable to run notion. The /etc/X11/Sessions/notion file points to /usr/bin/notion rather than where I installed it /usr/local/bin/notion.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;So far, I think this is one thing I can check of my list for building my system.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>notion with lxpanel</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-31-notion-with-lxpanel.html"/>
        <updated>2015-05-31T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-31-notion-with-lxpanel.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Today I am starting a project to use lxpanel from lxde in the notion window manager. I am starting with a fresh set of config files.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    cp /usr/local/etc/notion/* /home/john/.notion&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Turn off mod_statusbar and turn on mod_dock.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    nano /home/john/.notion/cfg_notion.lua&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;comment out dopath(&quot;cfg_defaults&quot;)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Uncomment the rest of the modules except for mod_statusbar&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Reload the session&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;press F12&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;type session/restart&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;There will be a floating dock (black empty box) in the lower right of the workspace. To get rid of it&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    nano /home/john/.notion/cfg_dock.lua&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The first section creates a dock floating dock that can be used to place the lxpanel application. Set the mode to embedded or floating. Floating will allow the panel to be hidden. Embedded will permenently place the panel at the bottom of the screen. Set floating_hidden=true to automatically hide the panel when the session starts. Restart the session once cfg_dock.lua is saved (F12 + session/restart).&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Start lxpanel by pression F3 and typing lxpanel.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After the dock is setup add lxpanel to your .xinitrc This will make sure the panel is started when you log into the computer.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>notion 9999 ebuild.</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-30-notion-ebuild.html"/>
        <updated>2015-05-30T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-30-notion-ebuild.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Today I am investigating installing the latest version of x11-wm/notion on my machine. I got an email from the developer that it should be safe. He said that there are no plans for a new release but many fixes have been made in the commit logs. I’m going to risk it and try out the latest development source code.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Gentoo has a 9999 ebuild for notion. 9999 ebuilds directly install what is currently being developed in a project’s source code repository. It takes the current revision of the sources, compiles them, and installs the project on your system. For certain projects this can be dangerous. It depends a lot on the &lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows&quot;&gt;workflow&lt;/a&gt; of the project and the policy for commiting broken code.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Notion seems to use a &lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows/forking-workflow&quot;&gt;forking workflow&lt;/a&gt; with a main repository located on sourceforge. There are a few repositories on github. My guess is the accepted changes all get put into the sourceforge repo and releases are made from it. With the forking workflow The main repository should not be broken and it should be safe to install software from it without problems. So I am going to install the 9999 package.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Here is how I unmasked the 9999 ebuild and installed it.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    echo &quot;=x11-wm/notion-9999&quot; &amp;gt;&amp;gt; /etc/portage/package.unmask
    echo &quot;=x11-wm/notion-9999 **&quot; &amp;gt;&amp;gt; /etc/portage/package.accept_keywords
    emerge -av x11-wm/notion&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This results in an error. Probably because the dependencies have changed since last year. To fix this I am copying the ebuild to my &lt;a href=&quot;https://github.com/moaxcp/moaxcp-gentoo-overlay&quot;&gt;git overlay&lt;/a&gt; and updating it.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;It turns out that there is a problem with the current code. The lua detector is not able to detect the version of lua installed on the system. It uses the name of the lua executable rather than using lua -v to get the version. I will need to wait on installing the 9999 version of notion until this is resolved. The developer said it may not be until next weekend.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>upgrading the kernel</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-29-upgrading-kernel.html"/>
        <updated>2015-05-29T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-29-upgrading-kernel.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I’m following &lt;a href=&quot;https://wiki.gentoo.org/wiki/Kernel/Upgrade&quot;&gt;this&lt;/a&gt; guide to upgrade my gentoo kernel.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;These are just some notes:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;backup current .config&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    cp /usr/src/linux/.config ~/kernel-config-`uname -r`&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;change symlink for /usr/src/linux to new sources&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    eselect kernel list
    eselect kernel set ${from list}&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Interestingly, my system is running 3.17.8-gentoo-r1 and the latest installed sources is linux-3.18.12-gentoo but only the latest is displayed in the kernel listing.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    john-gentoo src # ls -l
    total 8
    lrwxrwxrwx  1 root root   22 Feb  9 04:39 linux -&amp;gt; linux-3.17.8-gentoo-r1
    drwxr-xr-x 21 root root 4096 May  2 21:40 linux-3.17.8-gentoo-r1
    drwxr-xr-x 24 root root 4096 May 20 20:31 linux-3.18.12-gentoo

    john-gentoo src # eselect kernel list
    Available kernel symlink targets:
      [1]   linux-3.18.12-gentoo&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I am selecting the available kernel.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    john-gentoo src # eselect kernel set 1
    john-gentoo src # eselect kernel list
    Available kernel symlink targets:
      [1]   linux-3.18.12-gentoo *&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;There is a make command to convert the old .config for the new kernel.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    make silentoldconfig&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I should have used make olddefconfig because I only want defaults for new items.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now to building the kernel. I have a sript that will build the kernel for my computer.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    genkernel --menuconfig --lvm --mdadm --makeopts=&quot;-j9 -l8&quot; all&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This will enable lvm, mdadm and let me look at the menu. The make opts will build the kernel faster and use all of the cores in my processor.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Next I need to upgrade grub. The grub settings are located in /etc/default/grub. I needed to change the settings for my kernel and they still should be valid.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    GRUB_CMDLINE_LINUX=&quot;domdadm dolvm real_root=/dev/vg0/home resume=/dev/vg0/swap&quot;
    GRUB_DISABLE_LINUX_UUID=true&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Rebuild the grub config for the new kernel.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;    grub2-mkconfig -o /boot/grub/grub.cfg&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now to restart.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After restarting X would not start. I needed to setup my nvidia drivers again following &lt;a href=&quot;https://wiki.gentoo.org/wiki/NVIDIA_Driver_with_Optimus_Laptops&quot;&gt;this&lt;/a&gt; guide. I’m not sure how things worked before because I didn’t have a xorg.conf and I definately didn’t use an edid firmware for the monitor. Now I am glad to say my kernel is current and X starts.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>layman</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-27-layman.html"/>
        <updated>2015-05-27T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-27-layman.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;I’m working on getting &lt;a href=&quot;https://wiki.gentoo.org/wiki/Layman&quot;&gt;layman&lt;/a&gt; setup on my gentoo system so I can connect to other overlays. Currently I have been copying ebuilds from overlays using my browser. This should be avoided unless I need to make changes to the overlay. I would also like to eventually get &lt;a href=&quot;https://github.com/moaxcp/moaxcp-gentoo-overlay&quot;&gt;my overlay&lt;/a&gt; recognized as a &lt;a href=&quot;https://overlays.gentoo.org/&quot;&gt;gentoo overlay&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect2&quot;&gt; 
 &lt;h3 id=&quot;_use_flags&quot;&gt;Use Flags&lt;/h3&gt; 
 &lt;div class=&quot;ulist&quot;&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;git - because I’m using git&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;subversion - because people still use it&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;sync-plugin-portage - This seems to work with the new portage system. Since I migrated to that system I will probably want to use it.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
 &lt;div class=&quot;paragraph&quot;&gt; 
  &lt;p&gt;To install layman:&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div class=&quot;listingblock&quot;&gt; 
  &lt;div class=&quot;content&quot;&gt; 
   &lt;pre&gt;    $ nano /etc/portage/package.use/layman
    app-portage/layman git subversion sync-plugin-portage
    ctrl+x, y

    $ emerge -a app-portage/layman
    * IMPORTANT: 1 news items need reading for repository &apos;gentoo&apos;.
    * Use eselect news read to view new items.

    These are the packages that would be merged, in order:

    Calculating dependencies... done!
    [ebuild   R    ] app-portage/layman-2.0.0-r3::gentoo  USE=&quot;git subversion -bazaar -cvs -darcs -mercurial {-test}&quot; PYTHON_TARGETS=&quot;python2_7 (-pypy)&quot; 0 KiB

    Total: 1 package (1 reinstall), Size of downloads: 0 KiB

    Would you like to merge these packages? [Yes/No] no&lt;/pre&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div class=&quot;paragraph&quot;&gt; 
  &lt;p&gt;As you can see the sync-plugin-portage flag is ignored. This is because I am not getting the latest version of layman from the repo. To fix this add the ~amd64 keyword for the package.&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div class=&quot;listingblock&quot;&gt; 
  &lt;div class=&quot;content&quot;&gt; 
   &lt;pre&gt;    nano /etc/portage/package.accept_keywords
    app-portage/layman ~amd64
    ctrl+x, y

    emerge -av app-portage/layman

    * IMPORTANT: 1 news items need reading for repository &apos;gentoo&apos;.
    * Use eselect news read to view new items.

    These are the packages that would be merged, in order:

    Calculating dependencies... done!
    [ebuild     U ~] app-portage/layman-2.3.0::gentoo [2.0.0-r3::gentoo] USE=&quot;git subversion sync-plugin-portage%* -bazaar -cvs -darcs -g-sorcery% -gpg% -mercurial -squashfs% {-test}&quot; PYTHON_TARGETS=&quot;python2_7 python3_3%* -pypy -python3_4%&quot; 117 KiB

    Total: 1 package (1 upgrade), Size of downloads: 117 KiB

    Would you like to merge these packages? [Yes/No] yes
    &amp;gt;&amp;gt;&amp;gt; Verifying ebuild manifests
    &amp;gt;&amp;gt;&amp;gt; Running pre-merge checks for app-portage/layman-2.3.0
    &amp;gt;&amp;gt;&amp;gt; Emerging (1 of 1) app-portage/layman-2.3.0::gentoo
    &amp;gt;&amp;gt;&amp;gt; Installing (1 of 1) app-portage/layman-2.3.0::gentoo
    &amp;gt;&amp;gt;&amp;gt; Jobs: 1 of 1 complete                           Load avg: 0.38, 0.15, 0.08
    &amp;gt;&amp;gt;&amp;gt; Auto-cleaning packages...

    &amp;gt;&amp;gt;&amp;gt; No outdated packages were found on your system.

    * GNU info directory index is up-to-date.&lt;/pre&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div class=&quot;paragraph&quot;&gt; 
  &lt;p&gt;Now I can remove vagrant from my overlay and use the original one.&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>accumulo devserver</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-26-accumulo-devserver.html"/>
        <updated>2015-05-26T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-26-accumulo-devserver.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Today I am messing with &lt;a href=&quot;https://github.com/joshelser/accumulo-devserver&quot;&gt;this&lt;/a&gt; project to create an accumulo dev server.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Since I already have virtualbox on my system I only needed to figure out how to install vagrant. Using my gentoo overlay I found an &lt;a href=&quot;http://gpo.zugaina.org/app-emulation/vagrant-bin&quot;&gt;ebuild&lt;/a&gt; for the latest version and added it. Once unmasked and installed the vagrant command works.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I ran into problems setting up the box. I had google a precise64 box because the default did not download (404 error). Using the command found &lt;a href=&quot;http://docs.vagrantup.com/v2/providers/basic_usage.html&quot;&gt;here&lt;/a&gt; I was able to setup a box.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After sshing into the server it looks like I cannot run accumulo shell. I guess I will have to try this again tomorrow.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I think vagrant is the way to go for setting these dev boxes up. There is a gentoo box that could be used to setup a dev environment. The only problem is finding ebuilds for hadoop, accumulo, and zookeeper. Also hadoop requires ProtocolBuffer but there is already an updated ebuild for it in the master overlay.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>xterm settings</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-26-xterm-settings.html"/>
        <updated>2015-05-26T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-26-xterm-settings.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To setup xterm with different colors than the system default edit the file ~.Xresources.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Here are some links to a few good color schemes I found.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://wiki.mpich.org/mpich/index.php/Configure_xterm_Fonts_and_Colors_for_Your_Eyeball&quot; class=&quot;bare&quot;&gt;https://wiki.mpich.org/mpich/index.php/Configure_xterm_Fonts_and_Colors_for_Your_Eyeball&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/x_resources&quot; class=&quot;bare&quot;&gt;https://wiki.archlinux.org/index.php/x_resources&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://unix4lyfe.org/xterm/&quot; class=&quot;bare&quot;&gt;https://unix4lyfe.org/xterm/&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Just copy and paste these into the file.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To enable changes to the file add&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;[[ -f ~/.Xresources ]] &amp;amp;&amp;amp; xrdb -merge ~/.Xresources&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;to ~/.xinitrc and restart your terminal or use source ~/.xinitrc&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>moaxcp-gentoo-overlay</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-23-moaxcp-gentoo-overlay.html"/>
        <updated>2015-05-23T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-23-moaxcp-gentoo-overlay.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I created an &lt;a href=&quot;https://github.com/moaxcp/moaxcp-gentoo-overlay&quot;&gt;gentoo overlay&lt;/a&gt; with the latest version of x11-wm/notion and my own project dev-java/recMD5. Go to the &amp;lt;a href=&quot;https://github.com/moaxcp/moaxcp-gentoo-overlay&quot;&amp;gt;overlay&amp;lt;/a&amp;gt; and follow the README.md for instructions on using the &lt;a href=&quot;https://github.com/moaxcp/moaxcp-gentoo-overlay&quot;&gt;overlay&lt;/a&gt;. Here are the notes from setting things up.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I’m going through this &lt;a href=&quot;https://wiki.gentoo.org/wiki/Overlay/Local_overlay&quot;&gt;tutorial&lt;/a&gt; for creating an overlay. The base directory is&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;/usr/local/portage/moaxcp&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;from the first section of the tutorial you create the repo&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;mkdir -p /usr/local/portage/moaxcp/{metadata,profiles}
echo &apos;moaxcp&apos; &amp;gt; /usr/local/portage/moaxcp/profiles/repo_name
echo &apos;masters = gentoo&apos; &amp;gt; /usr/local/portage/moaxcp/metadata/layout.conf
chown -R portage:portage /usr/local/portage/moaxcp
/usr/local/portage is already owned by portage
mkdir /etc/portage/repos.conf
nano /etc/portage/repos.conf/local.conf&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;add the following text, save and exit&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;[moaxcp]
location = /usr/local/portage/moaxcp
masters = gentoo
auto-sync = no&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now that the repo is create put a package in it&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;mkdir -p /usr/local/portage/moaxcp/x11-wm/notion
nano /usr/local/portage/moaxcp/x11-wm/notion/notion_p2014052800.ebuild&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;Add text from &lt;a href=&quot;https://523566.bugs.gentoo.org/attachment.cgi?id=389597&quot; class=&quot;bare&quot;&gt;https://523566.bugs.gentoo.org/attachment.cgi?id=389597&lt;/a&gt;. The file is called notion-3-2014052800-src.tar.bz2 on sourceforge. Which looks similar to what the ebuild looks for.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;save and exit&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;chown -R portage:portage /usr/local/portage/moaxcp pushd /usr/local/portage/moaxcp/x11-wm/notion repoman manifest&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;now I get&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;Invalid ebuild name: /usr/local/portage/moaxcp/x11-wm/notion/notion_p2014052800.ebuild
&amp;gt;&amp;gt;&amp;gt; Creating Manifest for /usr/local/portage/moaxcp/x11-wm/notion
!!! Invalid package name: &apos;x11-wm/notion_p2014052800&apos;
Unable to generate manifest.&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This was caused by the file name not containing the version number. I changed the file name to notion-3_p2014052800.ebuild and everything worked. Now add a keyword for the protected package so it will emerge.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;nano /etc/portage/package.keywords/notion
=x11-wm/notion-3_p2014052800 ~amd64&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Or use -a when emerging the package and accept the changes (don’t forget to dispatch-conf). On a side note once the overlay is setup I added everything in the overlay to github and setup the overlay to sync with github. Now when I do emerge –sync the overlay will sync with github. Any changes I make to the overlay can by committed using git.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To sync with git I changed the repos.conf/local.conf file&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;nano /etc/portage/repos.conf/local.conf&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Add text&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;[moaxcp]
location = /usr/local/portage/moaxcp
sync-uri = https://github.com/moaxcp/moaxcp-gentoo-overlay.git
masters = gentoo
auto-sync = yes
sync-type = git&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>recMD5 installs on gentoo</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-23-recmd5-installs-on-gentoo.html"/>
        <updated>2015-05-23T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-23-recmd5-installs-on-gentoo.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;For the final step of the recmd5 project I want create a gentoo ebuild that will build recmd5 and install it on the system for use.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I’m starting by using an example ebuild that seems to be a maven project similar to mine as far as building goes: &lt;a href=&quot;https://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/dev-java/gson/gson-2.3.1.ebuild?view=markup&quot;&gt;gson&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The final ebuild looks like &lt;a href=&quot;https://github.com/moaxcp/moaxcp-gentoo-overlay/blob/master/dev-java/recMD5/recMD5-1.0.1.ebuild&quot;&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Currently it is getting the source from the maven repository rather than the github archive of the source. I know the source is the same but I’m not sure which to pick. It is easier to get it from maven because the github name is recMD5 while the source file is recmd5.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I’m very excited to finally package my software for an os. I may work on getting my download manager installing on gentoo as well.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>VirtualBox Gentoo Template</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-17-virtualbox-gentoo-template.html"/>
        <updated>2015-05-17T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-17-virtualbox-gentoo-template.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;I am creating a new virtualbox gentoo instance. This will be used as a template for other gentoo vms on my laptop. For now it will be very basic.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;ulist&quot;&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;1 cpu&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;512 MB memory&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;8 GB harddrive space&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Being able to increase the template may be important. I have had problems in the past with increasing cpus in a gentoo vm. Adding memory shouldn’t be a problem. Adding harddrive space would be better if I used LVM.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_default_apps&quot;&gt;Default apps&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;So far I only need java and ssh.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_make_conf&quot;&gt;make.conf&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;For now I am using the settings I have on my local computer. This could cause problems with portability especially with cpu flags and the march option (corei7-avx).&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_planned_uses&quot;&gt;Planned uses&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;create a hadoop cluster with accumulo&lt;/p&gt; 
     &lt;div class=&quot;ulist&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; &lt;p&gt;Since this is what I use at work&lt;/p&gt; &lt;/li&gt; 
      &lt;/ul&gt; 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;create an ingestion server to run pentaho jobs&lt;/p&gt; 
     &lt;div class=&quot;ulist&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; &lt;p&gt;Since this is what I do at work&lt;/p&gt; &lt;/li&gt; 
      &lt;/ul&gt; 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;create a application server&lt;/p&gt; 
     &lt;div class=&quot;ulist&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; &lt;p&gt;This is for all webapps that interact with the accumulo db&lt;/p&gt; &lt;/li&gt; 
       &lt;li&gt; &lt;p&gt;crud/search services/apps&lt;/p&gt; &lt;/li&gt; 
      &lt;/ul&gt; 
     &lt;/div&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Checking HeapSortSelectHeap.java</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-09-checking-heapsortselectheap-java.html"/>
        <updated>2015-05-09T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-09-checking-heapsortselectheap-java.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I had to fix my previous post on HeapSort because I used the wrong comparison operators for siftDownMax and siftDownMin. To check these I made heapify public and printed the heap before sorting in runList.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;public static void runList(int[] list, Heap heap) {
    System.out.println(&quot;before: &quot; + Arrays.toString(list));
    HeapSortSelectHeap s = new HeapSortSelectHeap(heap);
    s.heapify(list);
    System.out.println(&quot;heap: &quot; + Arrays.toString(list));
    s.sort(list);
    System.out.println(&quot;after: &quot; + Arrays.toString(list));
}&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This results in:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;MINHEAP
before: [5, 6, 4, 9, 1, 2, 0, 8, 7, 3]
heap: [0, 1, 2, 7, 3, 5, 4, 8, 9, 6]
after: [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
MAXHEAP
before: [7, 9, 2, 6, 4, 1, 0, 3, 5, 8]
heap: [9, 8, 2, 6, 7, 1, 0, 3, 5, 4]
after: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;As you can see a min heap results in descending order and max heap results in ascending order.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Negative Lookahead Regex</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/05-04-106.html"/>
        <updated>2015-05-04T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/05-04-106.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Take a list of languages:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;ulist&quot;&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;English&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;French&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Spanish&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Portugues&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;And you want a regex that matches everything except English&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_using_negative_lookahead&quot;&gt;using negative lookahead&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;(?im)^(?!English).+$&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;using only&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;(?!English).+&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;will not work.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Tutorial For A Configurable Heapsort In Java</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/04-30-tutorial-for-a-configurable-heapsort-in-java.html"/>
        <updated>2015-04-30T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/04-30-tutorial-for-a-configurable-heapsort-in-java.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Heapsort is implemented by creating a heap and continuously removing the root element until the heap is empty. A heap is a tree with two properties: shape and heap. The shape property requires that the tree is always a complete tree. The heap property requires the tree to be in min-heap order or max-heap order. A min-heap is a tree where each node is smaller than it’s children. A max-heap is a tree where each node is larger than it’s children. d-ary is used to describe the maximum number of children a node can have in the heap.&amp;nbsp;Typical heapsort algorithms use a 2-ary heap but others are possible including a 1-ary heap.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;From the above concepts two choices are made when designing a heapsort. What heap property to use and what d-ary to use? A configurable heapsort would allow a user to make these decisions instead of being hard coded into the algorithm. If a user could make those choices what would the heapsort look like? How can the algorithm change between min-heap and max-heap? How can the algorithm&amp;nbsp;change between 2-ary, 3-ary, 1-ary, or 15-ary? First, lets look at a heap sort.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_a_2_ary_heap_sort&quot;&gt;A 2-ary heap sort&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;To get things started the following is a 2-ary heapsort&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;import java.util.Arrays;

public class HeapSort {
    private void swap(int[] list, int i, int j) {
        int temp = list[j];
        list[j] = list[i];
        list[i] = temp;
    }

    private void siftDown(int[] list, int start, int end) {
        int root = start;
        while (root * 2 + 1 &amp;lt;= end) {
            int child = root * 2 + 1;
            int swap = root;
            if (list[swap] &amp;lt; list[child]) {
                swap = child;
            }
            if (child + 1 &amp;lt;= end &amp;amp;&amp;amp; list[swap] &amp;lt; list[child + 1]) {
                swap = child + 1;
            }
            if (swap != root) {
                swap(list, root, swap);
                root = swap;
            } else {
                return;
            }
        }
    }

    private void heapify(int[] list) {
        int start = (list.length - 2) / 2;
        while (start &amp;gt;= 0) {
            siftDown(list, start, list.length - 1);
            start -= 1;
        }
    }

    public void sort(int[] list) {
        heapify(list);
        int end = list.length - 1;
        while (end &amp;gt; 0) {
            swap(list, end, 0);
            end -= 1;
            siftDown(list, 0, end);
        }
    }

    public static void main(String... args) {
        int[] list = {5, 6, 4, 9, 1, 2, 8, 7, 3};
        System.out.println(&quot;before: &quot; + Arrays.toString(list));
        new HeapSort().sort(list);
        System.out.println(&quot;after: &quot; + Arrays.toString(list));
    }
}&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_adding_the_heap_property&quot;&gt;Adding the heap property&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Changing the order requires switching the relational operator on line 21 and 17 from less than to greater than. This requires an if statement to decided which comparison to make.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;There are a few different designs that could be implemented. There could be two implementations of an abstract HeapSort. One that implements a min-heap and another that implements a max-heap. siftDown is the only method that needs to be abstract. This could get complicated when implementing a configuration for d-ary. MaxHeapSort and MinHeapSort would both need to implement the code for d-ary which will mean overriding the other methods.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;For now, I am going with a simple approach of using an enum to configure the heap behavior. I split the siftDown method into two different methods: siftDownMin and siftDownMax. Which method is used when siftDown is called depends on the value of the enum member variable. The performance benefit of using two different methods is to only make one comparison of the enum when siftDown is called rather than in the while loop for siftDown. This design does call for copying almost the exact code in the two methods. Since the methods are short and well defined this exception is reasonable.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;import java.util.Arrays;

public class HeapSortSelectHeap {
    public enum Heap {MINHEAP, MAXHEAP};
    private Heap heap;

    public HeapSortSelectHeap(Heap heap) {
        this.heap = heap;
    }

    private void swap(int[] list, int i, int j) {
        int temp = list[j];
        list[j] = list[i];
        list[i] = temp;
    }

    private void siftDown(int[] list, int start, int end) {
        switch (heap) {
            case MINHEAP:
                siftDownMin(list, start, end);
                break;
            case MAXHEAP:
                siftDownMax(list, start, end);
                break;
        }
    }

    private void siftDownMin(int[] list, int start, int end) {
        int root = start;
        while (root * 2 + 1 &amp;lt;= end) {
            int child = root * 2 + 1;
            int swap = root;
            if (list[swap] &amp;gt; list[child]) {
                swap = child;
            }
            if (child + 1 &amp;lt;= end &amp;amp;&amp;amp; list[swap] &amp;gt; list[child + 1]) {
                swap = child + 1;
            }
            if (swap != root) {
                swap(list, root, swap);
                root = swap;
            } else {
                return;
            }
        }
    }

    private void siftDownMax(int[] list, int start, int end) {
        int root = start;
        while (root * 2 + 1 &amp;lt;= end) {
            int child = root * 2 + 1;
            int swap = root;
            if (list[swap] &amp;lt; list[child]) {
                swap = child;
            }
            if (child + 1 &amp;lt;= end &amp;amp;&amp;amp; list[swap] &amp;lt; list[child + 1]) {
                swap = child + 1;
            }
            if (swap != root) {
                swap(list, root, swap);
                root = swap;
            } else {
                return;
            }
        }
    }

    private void heapify(int[] list) {
        int start = (list.length - 2) / 2;
        while (start &amp;gt;= 0) {
            siftDown(list, start, list.length - 1);
            start -= 1;
        }
    }

    public void sort(int[] list) {
        heapify(list);
        int end = list.length - 1;
        while (end &amp;gt; 0) {
            swap(list, end, 0);
            end -= 1;
            siftDown(list, 0, end);
        }
    }

    public static void runList(int[] list, Heap heap) {
        System.out.println(&quot;before: &quot; + Arrays.toString(list));
        new HeapSortSelectHeap(heap).sort(list);
        System.out.println(&quot;after: &quot; + Arrays.toString(list));
    }

    public static void main(String... args) {
        int[] list = {5, 6, 4, 9, 1, 2, 0, 8, 7, 3};
        runList(list, HeapSortSelectHeap.Heap.MINHEAP);
        list = new int[]{7, 9, 2, 6, 4, 1, 0, 3, 5, 8};
        runList(list, HeapSortSelectHeap.Heap.MAXHEAP);
    }
}&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;a href=&quot;https://github.com/moaxcp/heapsort&quot;&gt;This&lt;/a&gt; is the repository for the heapsort project. In the next post I will show how to make a ternary heapsort and generalize it into any possible d-ary heapsort.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Edit: I fixed an error in siftDownMax and siftDownMin. They used the wrong comparison operators.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>$PS1 in gentoo</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/04-15-ps1-in-gentoo.html"/>
        <updated>2015-04-15T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/04-15-ps1-in-gentoo.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I finally changed my terminal to get rid of long paths. Right now it is&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;john@john-gentoo ~/Dropbox/programming/groovy/factordb/grails-app/conf $&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;And after the change it is&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;john@john-gentoo conf $&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This is what I added to my .bashrc&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;PS1=&quot;\[33[01;32m\]\u\[33[01;34m\] \W \$\[33[00m\]&quot;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Setting up xterm</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/04-14-setting-up-xterm.html"/>
        <updated>2015-04-14T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/04-14-setting-up-xterm.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;from &lt;a href=&quot;https://wiki.archlinux.org/index.php/x_resources&quot; class=&quot;bare&quot;&gt;https://wiki.archlinux.org/index.php/x_resources&lt;/a&gt; If you do not use a desktop environment, you probably need to add the following line to your ~/.xinitrc:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;[[ -f ~/.Xresources ]] &amp;amp;amp;&amp;amp;amp; xrdb -merge ~/.Xresources&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Creating factordb</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/04-14-creating-factordb.html"/>
        <updated>2015-04-14T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/04-14-creating-factordb.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I started creating a new app called &lt;a href=&quot;https://github.com/moaxcp/factordb&quot;&gt;factordb&lt;/a&gt;. I am using the new grails 3.0.1. I have a few ideas for what it should do&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;add new numbers and their factors&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;this will be validated by multiplying the two numbers (no authentication needed)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;web service to add new numbers&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;add prime numbers&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;These are numbers that cannot be factored&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;These will be submitted as requests, added once processed&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;maintain a list of numbers to factor&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;maintain factoring program which distributes jobs&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;start, stop, send numbers to factor&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;display stats for factoring program&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;These are just some ideas for now. The factoring program will be a separate project based off of &lt;a href=&quot;https://github.com/moaxcp/umuc-team-factor&quot;&gt;umuc-team-factor&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>recmd5</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/02-20-recmd5.html"/>
        <updated>2015-02-20T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/02-20-recmd5.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I have created a small project focused on the md5 algorithm. I noticed the md5 in java cannot be restarted. If my program is md5ing a large file, I need to start the process over again if the program crashes.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;To solve this problem I created an MD5State which holds&amp;nbsp;the state of the algorithm. A user can write this state to a file or database as bytes are being processed. If the program crashes the state can be recovered and processing can begin from where it left off.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I originally wrote this on google code ages ago but I wanted try using some of the other internet tools out there. I moved the project over to github and signed up for a travis-ci account. I created a cloud9 project to work on it through a browser. I even created some tests so travis-ci could fail&amp;nbsp;builds if I messed something up.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I looked into installing this as a MessageDigest object in the java platform. It looks easy but I’m not sure if it is useful enough.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The test method is a good example of how to use this project. It takes a byte array and compares the md5 with the md5 from java.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;` private boolean testAgainstJavaMD5(byte[] bytes) { MessageDigest expected = null; MD5MessageDigest test = null; try { expected = MessageDigest.getInstance(&quot;md5&quot;); test = new MD5MessageDigest(); } catch (NoSuchAlgorithmException ex) { Logger.getLogger(MD5MessageDigestTest.class.getName()).log(Level.SEVERE, null, ex); throw new IllegalStateException(&quot;could not create MessageDigest&quot;, ex); } expected.update(bytes); String s = new BigInteger(1, expected.digest()).toString(16); if (s.length() == 31) { s = &quot;0&quot; + s; } test.digest(bytes); Logger.getLogger(MD5MessageDigestTest.class.getName()).info(s); Logger.getLogger(MD5MessageDigestTest.class.getName()).info(test.getState().toString()); return s.equals(test.getState().toString()); } `&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Here are the links to the project.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/moaxcp/recMD5&quot; class=&quot;bare&quot;&gt;https://github.com/moaxcp/recMD5&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://travis-ci.org/moaxcp/recMD5&quot; class=&quot;bare&quot;&gt;https://travis-ci.org/moaxcp/recMD5&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Gentoo on the Java x86 emulator</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/02-01-gentoo-on-the-java-x86-emulator.html"/>
        <updated>2015-02-01T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/02-01-gentoo-on-the-java-x86-emulator.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Java has an &lt;a href=&quot;http://jpc.sourceforge.net/download_application.html&quot;&gt;x86 emulator&lt;/a&gt; that claims to run linux. After attempting the demo links for other distributions that do not work I decided to try to install gentoo on it myself.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_create_a_disk_from_the_disks_menu&quot;&gt;create a disk from the disks menu.&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;hda 2gb&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_start_jpc&quot;&gt;start jpc&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;java -jar JPCApplication.jar -boot cdrom -cd
rom gentoo\install-x86-minimal-20141209.iso -hda gentoo\hda.imgj&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Note: could not use absolute paths (bad programming for c:)&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_file_start&quot;&gt;File -&amp;gt; Start&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_error&quot;&gt;Error&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;C:\Users\megan\Dropbox\Software\jcp&amp;gt;java -jar JPCApplication.jar -boot cdrom -cd
rom gentoo\install-x86-minimal-20141209.iso -hda gentoo\hda.img
Jan 31, 2015 10:05:09 PM org.jpc.j2se.JPCApplication main
INFO: Using configuration specified on command line
Jan 31, 2015 10:05:09 PM org.jpc.support.HDBlockDevice &amp;lt;init&amp;gt;
INFO: no geometry information, guessing CHS 1,040:16:63
Jan 31, 2015 10:05:09 PM org.jpc.emulator.memory.codeblock.CodeBlockManager &amp;lt;init&amp;gt;
INFO: JVM allows classloader creation: using advanced compilers.
Jan 31, 2015 10:05:16 PM org.jpc.emulator.motherboard.Bios print
INFO: $Revision: 1.209 $ $Date: 2008/06/02 20:08:10 $
Jan 31, 2015 10:05:16 PM org.jpc.emulator.motherboard.Bios print
INFO: VGABios $Id: vgabios.c,v 1.67 2008/01/27 09:44:12 vruppert Exp $
Jan 31, 2015 10:05:16 PM org.jpc.emulator.motherboard.Bios print
INFO: VBE Bios $Id: vbe.c,v 1.60 2008/03/02 07:47:21 vruppert Exp $
Jan 31, 2015 10:05:16 PM org.jpc.emulator.motherboard.Bios print
INFO: Starting rombios32
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: ram_size=0x10000000
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: Found 1 cpu(s)
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: bios_table_addr: 0x000fb778 end=0x000fcc00
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: PIIX3 init: elcr=00 0a
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: PCI: bus=0 devfn=0x08: vendor_id=0x10ec device_id=0x8029
**

**

Address is c000
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: region 0: 0x0000c000
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: PCI: bus=0 devfn=0x10: vendor_id=0x8086 device_id=0x7000
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: PCI: bus=0 devfn=0x11: vendor_id=0x8086 device_id=0x7010
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: region 4: 0x0000c100
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: PCI: bus=0 devfn=0x18: vendor_id=0x1234 device_id=0x1111
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: region 0: 0xe0000000
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: MP table addr=0x000fb850 MPC table addr=0x000fb780 size=0xd0
Jan 31, 2015 10:05:17 PM org.jpc.emulator.memory.EPROMMemory writeAttempted
INFO: Write of 4 bytes attempted at address 0x8d3
Jan 31, 2015 10:05:17 PM org.jpc.emulator.memory.EPROMMemory writeAttempted
INFO: Write of 4 bytes attempted at address 0x8e4
Jan 31, 2015 10:05:17 PM org.jpc.emulator.memory.EPROMMemory writeAttempted
INFO: Write of 4 bytes attempted at address 0x8e8
Jan 31, 2015 10:05:17 PM org.jpc.emulator.memory.EPROMMemory writeAttempted
INFO: Write of 4 bytes attempted at address 0x904
Jan 31, 2015 10:05:17 PM org.jpc.emulator.memory.EPROMMemory writeAttempted
INFO: Write of 4 bytes attempted at address 0x92f
Jan 31, 2015 10:05:17 PM org.jpc.emulator.memory.EPROMMemory writeAttempted
INFO: Write of 4 bytes attempted at address 0x933
Jan 31, 2015 10:05:17 PM org.jpc.emulator.memory.EPROMMemory writeAttempted
INFO: Write of 4 bytes attempted at address 0x940
Jan 31, 2015 10:05:17 PM org.jpc.emulator.memory.EPROMMemory writeAttempted
INFO: Write of 4 bytes attempted at address 0x944
Jan 31, 2015 10:05:17 PM org.jpc.emulator.memory.EPROMMemory writeAttempted
INFO: Write of 4 bytes attempted at address 0x878
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: SMBIOS table addr=0x000fb860
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: bios_table_cur_addr: 0x000fb964
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: ata0-0: PCHS=1040/16/63 translation=lba LCHS=1024/16/63
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: IDE time out
Jan 31, 2015 10:05:17 PM org.jpc.emulator.motherboard.Bios print
INFO: IDE time out
Jan 31, 2015 10:05:19 PM org.jpc.emulator.motherboard.Bios print
INFO: Booting from 0000:7c00
Jan 31, 2015 10:05:19 PM org.jpc.emulator.memory.codeblock.fastcompiler.FASTComp
iler compileRealModeBlock
INFO: java.lang.NullPointerException: unimplemented microcode: PUSHAD_A16
Jan 31, 2015 10:05:20 PM org.jpc.emulator.motherboard.Bios print
INFO: KBD: unsupported int 16h function 03
Jan 31, 2015 10:05:20 PM org.jpc.emulator.motherboard.Bios print
INFO: *** int 15h function AX=e980, BX=0000 not yet supported!&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_started_damn_small_linux&quot;&gt;Started damn small linux&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;java -jar JPCApplication.jar -boot cdrom -cd&amp;nbsp;rom dsl\dsl-4.4.10.iso -hda gentoo\gentoo.img&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;` Java HotSpot™ 64-Bit Server VM warning: CodeCache is full. Compiler has been disabled. Java HotSpot™ 64-Bit Server VM warning: Try increasing the code cache size us ing -XX:ReservedCodeCacheSize= CodeCache: size=245760Kb used=239785Kb max_used=240710Kb free=5974Kb bounds [0x000000000f010000, 0x000000001e010000, 0x000000001e010000] total_blobs=13616 nmethods=13063 adapters=463 compilation: enabled `&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_restarted_damn_small_linux&quot;&gt;Restarted damn small linux&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;java -XX:ReservedCodeCacheSize=2048m -jar JPCApplication.jar -boot cdrom -cdrom dsl\dsl-4.4.10.iso -hda gentoo\gentoo.img&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This is still not starting correctly. Also noticed uptime was 45 minutes after about 10 minutes.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_switching_to_system_rescue_cd&quot;&gt;Switching to System Rescue CD&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre&gt;java -XX:ReservedCodeCacheSize=2048m -jar JPCApplication.jar -boot cdrom -cdrom gentoo\systemrescuecd-x86-4.4.1.iso -hda gentoo\gentoo.img&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Not working!&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_damn_small_linux_in_text_mode_dsl_2&quot;&gt;Damn Small Linux in text mode (dsl 2)&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Works in run level 2!&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;After looking into the ethernet setup I found that an internal network can be setup with the -net argument but it only works between two vms on the same computer. It doesn’t actually connect to the internet through the host system.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Since this emulator cannot connect to&amp;nbsp;the internet. I have to rethink the usefulness of jpc. If it is not possible to setup a network how can it be used for any form of processing? It either needs to have networking or access to files on the host system. It needs I/O to the host system other than the keyboard, mouse, and monitor. It may be possible to forward everything from the EthernetHubServer to the host system network card somehow in java but I’m not sure how.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This was a fun experiment but JPC is only useful for playing dos games.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>sony vaio p update</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/01-26-sony-vaio-p-update.html"/>
        <updated>2015-01-26T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/01-26-sony-vaio-p-update.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Today I was finally able to update my tiny laptop. It was having an compile issue with the package sys-devel/llvm. I’m not sure what the issue was but I masked the updated package and the rest of my system was able to update. Once I see an update to the ebuild I will try it again.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>BIOS Crashed</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2015/01-03-bios-crashed.html"/>
        <updated>2015-01-03T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2015/01-03-bios-crashed.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After trying to delete a UEFI entry in my system bios&amp;nbsp;my computer no longer starts up. It gets to the BIOS screen, the progress bar fills in, and they system doesn’t start. Any attempt to get into the BIOS menu does not work. The screen says it is preparing the menu but it never opens. I have tried resetting the bios by unplugging it, taking out the battery, taking out the motherboard battery, and pressing the power button to remove any static power. The result is the same. It looks like I now need to replace the motherboard.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I have started working on my tiny sony vaio p. gentoo will not update from a problem with sys-devel/llvm-3.5.0. It has already been reported in the forum &lt;a href=&quot;http://forums.gentoo.org/viewtopic-p-7676898.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Meetup.com looks like fun. I have signed up for the NOVALUG group. I’m not sure where will happen but I’m excited about it.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I found a site&amp;nbsp;&lt;a href=&quot;https://projecteuler.net/&quot; class=&quot;bare&quot;&gt;https://projecteuler.net/&lt;/a&gt;. It is a sight for solving math problems using computer programs. This would be fun to practice with clojure or the new java features if I can get my computer setup.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Setting up gentoo again: Part 1</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2014/12-20-setting-up-gentoo-again-part-1.html"/>
        <updated>2014-12-20T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2014/12-20-setting-up-gentoo-again-part-1.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Recently I decided to reinstall gentoo. The first install went well but I would like to switch the system to use raid 0, GPT, and LVM on LUKS. Setting up the hard drives is the primary reason for doing a complete reinstall. I also want to setup X with LXDM, LXDE, and notion. I really like notion but I do not want to build an entire desktop environment around it.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;LVM on LUKS uses only one key to access the system.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;LVM cannot span multiple volumes in this case. Since I am using raid 0 on my two hard drives this will not be a problem and my system will never expand beyond two hard drives.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_backup_everything&quot;&gt;Backup Everything&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;I made a script that copies /etc and the kernel config to my dropbox folder. This will be used as a reference to help configure the kernel and applications. In the future, on the new setup, this should be setup as a cron job to back things up in case something happens. Configuring the system is a lot of work and I do not want to lose it.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_create_a_system_rescue_cd_boot_disk&quot;&gt;Create a System Rescue CD boot disk.&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;I decided to use System Rescue CD because it is recommended by others on the gentoo forum. Also in the first install of gentoo I could not setup gpt and grub with the minimal install cd. Instead I had to use mbr and grub. These instruction can be found at &lt;a href=&quot;http://www.sysresccd.org&quot;&gt;sysresccd.org&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_raid_0&quot;&gt;Raid 0&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Turning on Raid 0 can be done in the bios.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;start up the system and press F2&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;go to Settings -&amp;gt; System Configuration -&amp;gt; SATA Operation&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Set SATA Operation to RAID On&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Press Apply and Exit&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Now that raid is on a new menu will appear at startup after the bios screen. Press CTRL + I to open the raid screen. On this menu simply create a RAID Volume with the settings that you would like.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;Select Create RAID Volume&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Use default settings (RAID0, Strip Size 128KB)&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Select Create Volume&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Enter y to create the volume&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_in_the_end&quot;&gt;In The End…&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The raid that comes with my system is called a fakeraid. This means that it is really a software raid implemented in the firmware. It allows for a software raid to be setup that can be recognized between different operating systems. If I were to setup a dual boot system they raid could be shared between them. Since I am not doing this I decided to go with a software raid implemented in the linux kernel.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The plan now is to have a software raid 0 to combine the drives into one volume, use luks to encrypt it, and use lvm to do volume management (add, remove, resize partitions).&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;In the next post I will cover this setup.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Changing keyboard shortcuts in the notion windows manager</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2014/10-15-changing-keyboard-shortcuts-in-the-notion-windows-manager.html"/>
        <updated>2014-10-15T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2014/10-15-changing-keyboard-shortcuts-in-the-notion-windows-manager.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;There are two problems with notion’s keyboard shortcuts: using the Alt key and function key for commands. First the Alt key is used for things like splitting and resizing frames. The Alt key is usually used to select menus in a window. For instance, in Netbeans Alt+r selects the run menu. When I push Alt+r notion tries to resize the frame instead of letting netbeans open the menu. This is why most Tiling windows managers use the Super key (windows key) instead, allowing applications to use the Alt key. The second problem is, function keys are used for things like creating workspaces, opening a terminal, and running commands. Notion hijacks these keys so applications cannot use them. The most recent example I ran into is with alsamixer. Alsamixer uses the function keys for selecting the sound card and viewing system info. Notion’s keyboard shortcuts break applications. This is a problem for a mouse free windows manager. Notion should design a new shortcut layout that is simple and works with other X11 applications.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Adding splitting screen shortcuts to the notion windows manager</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2014/10-12-adding-splitting-screen-shortcuts-to-the-notion-windows-manager.html"/>
        <updated>2014-10-12T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2014/10-12-adding-splitting-screen-shortcuts-to-the-notion-windows-manager.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Some time ago I asked a question on stack overflow about adding new commands to the notion window manager. These commands split the entire workspace, adding a new frame to the bottom or side of it. Here is a link: &lt;a href=&quot;http://stackoverflow.com/questions/24494725/splitting-workspaces-in-the-notion-window-manager&quot; class=&quot;bare&quot;&gt;http://stackoverflow.com/questions/24494725/splitting-workspaces-in-the-notion-window-manager&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;In cfg_tiling.lua add&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;kpress(META..&quot;Z&quot;, &quot;WTiling.split_top(_, &apos;bottom&apos;):goto_focus()&quot;),&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;inside the &quot;defbindings(&quot;WTiling&quot;, {&quot; block and add&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;kpress(&quot;Z&quot;, &quot;Wtiling.split_top(_, &apos;left&apos;):goto_focus()&quot;),&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;inside the &quot;submap(META..&quot;K&quot;, {&quot; block&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;It sets up META..Z and META..K + Z as the key bindings for these actions.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After setting these up on my Dell precision 4600 only META..Z seems to work and the focus is not moving to the new frame.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>stalonetray in notion</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2014/10-11-stalonetray-in-notion.html"/>
        <updated>2014-10-11T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2014/10-11-stalonetray-in-notion.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Currently, stalonetray is installed and running from the .xinitrc file with:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;stalonetray --geometry 6x1 --no-shrink --kludges force_icons_size -i 24 &amp;amp;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;In my current notion layout I have to move stalonetray to a small frame in the lower right hand side of my monitor. I would like to make stalonetray part of the status bar in notion.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The first step is to create the config files in ~/.notion.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;cp /etc/notion/* .notion&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now edit cfg_notion.lua and include&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;defwinprop {class=&quot;stalonetray&quot;, statusbar=&quot;dock&quot;}&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now edit cfg_statusbar.lua and add %systray_dock after %systray on the template line.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;template=&quot;[ %date || load: %load ] %filler%systray%systray_dock&quot;,&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;now when notion starts stalonetray will appear in the statusbar. The only problem I see now is when there is only one frame and it is split virtically, stalonetray is no longer in the lower right corner. I think have this fixed on my sony vaio p which I will look at tomorrow and try to fix.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Install bluetooth mouse</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2014/10-10-install-bluetooth-mouse.html"/>
        <updated>2014-10-10T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2014/10-10-install-bluetooth-mouse.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I am following the wiki article at: &lt;a href=&quot;http://wiki.gentoo.org/wiki/Bluetooth&quot; class=&quot;bare&quot;&gt;http://wiki.gentoo.org/wiki/Bluetooth&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After installing bluez, the gentoo wiki says to use hcitool to list the bluetooth devices. On my computer there were no devices. The wiki suggests using rfkill to unblock the device but I found that I needed to use &quot;hciconfig hci0 up&quot; in order for the device to be listed. rfkill was helpful in listing the bluetooth device as hci0 though.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The wiki uses simple-agent which will only be available from the bluez package if the test-programs use flag is enabled for that package. I added &quot;net-wireless/bluez test-programs&quot; to /etc/portage/package.use and re-emerged the package but it did not add simple-agent.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I will have to continue this tomorrow.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Bluetooth mouse on Gentoo part 2</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2014/10-10-bluetooth-mouse-on-gentoo-part-2.html"/>
        <updated>2014-10-10T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2014/10-10-bluetooth-mouse-on-gentoo-part-2.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;simple-agent is no longer available in bluez. The gentoo wiki must be very outdated. The version I am using is 5.21. The test-programs use flag is no longer used. So I removed it from package.use. After searching for commands that start with blue I found bluetoothctl which did everything I needed. Here is what I did once bluetoothctl opened.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;code&gt;list&lt;/code&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;displays the local controllers on the computer.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;code&gt;devices&lt;/code&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;displays the devices.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;code&gt;scan on&lt;/code&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;starts scanning for new devices to add. (put the device in pairing mode).&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;code&gt;pair {mac address}&lt;/code&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;pairs the device with the controller.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;From here I thought the mouse would work well but the mouse was still flashing for pairing. The help menu has a connect command in it so I tried that.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;code&gt;connect {mac address}&lt;/code&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Now the mouse is working. I also have a bluetooth remote keyboard that I could add in the future. In the past I had to enter keys on it to pair. It will be interesting to see how bluetoothctl handles this.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Connecting to a WPA Wireless Network From The Gentoo Minimal Install CD</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2014/06-01-connecting-to-a-wpa-wireless-network-from-the-gentoo-minimal-install-cd.html"/>
        <updated>2014-06-01T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2014/06-01-connecting-to-a-wpa-wireless-network-from-the-gentoo-minimal-install-cd.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Connecting to a wpa enabled wireless network can be difficult in the gentoo minimum install cd. Most sources suggest not to use the cd if this is an issue and to use a cd from a different distribution. There is no reason to do this because the minimal install CD comes with wpa_supplicant. wpa_supplicant is the basic tool and library that most network configuration tools for all linux distributions use to connect to wpa networks.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;When using the minimal install cd the network card should be configured to use wpa_supplicant and wpa_cli should be used to connect to the network. Using the configuration files that most tutorials show is useless as any changes will only be temporary and will be lost once the system is restarted.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_get_the_wireless_interface_name&quot;&gt;Get the wireless interface name&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;livecd ~ # iwconfig
lo      no wireless extensions.

enp1s0  no wireless extensions.

wlp2s0  IEE802.11bgn ESSID:off/any
       Mode:Managed Access Point: Not-Associated Tx-Power=15 dBm
       Retry long limit:7 RTS thr:off Fragment thr:off
       Encryption key:off
       Power Management:off&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_use_the_wireless_interface_name_to_create_the_init_script_for_the_interface&quot;&gt;Use the wireless interface name to create the init script for the interface&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;livecd~ # cp /etc/init.d/net.lo /etc/init.d/net.wlp2s0&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_create_the_init_script_for_the_wlp2s0_interface&quot;&gt;Create the init script for the wlp2s0 interface&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;livecd~ # nano /etc/conf.d/net
...
modules=&quot;wpa_supplicant&quot;
wpa_supplicant_wlp2s0=&quot;-Dwext -iwlp2s0 -c/etc/wpa_supplicant/wpa_supplicant.conf&quot;
config_wlp2s0=&quot;dhcp&quot;&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_edit_etc_wpa_supplicant_wpa_supplicant_conf&quot;&gt;Edit /etc/wpa_supplicant/wpa_supplicant.conf&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;livecd ~ # nano /etc/wpa_supplicant/wpa_supplicant.conf
...
ctrl_interface=/var/run/wpa_supplicant
ctrl_interface_group=0&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_start_the_wlp2s0_interface&quot;&gt;Start the wlp2s0 interface&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;livecd ~ # /etc/init.d/net.wlp2s0 start&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_connect_to_the_network_using_wpa_cli&quot;&gt;Connect to the network using wpa_cli&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;livecd ~ # wpa_cli&amp;amp;gt;scan
CTRL-EVENT-SCAN-RESULTS
&amp;gt;scan_results
&amp;gt;add_network
0
&amp;gt;set_network 0 ssid &quot;NetworkName&quot;
OK
&amp;gt;set_network 0 psk &quot;passphrase&quot;
OK
&amp;gt;enable_network 0
OK
&amp;gt;quit&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_test_the_network_with_a_ping&quot;&gt;Test the network with a ping&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;listingblock&quot;&gt; 
   &lt;div class=&quot;content&quot;&gt; 
    &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;livecd ~ # ping www.google.com&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Create an Installer for Gentoo</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2014/05-18-create-an-installer-for-gentoo.html"/>
        <updated>2014-05-18T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2014/05-18-create-an-installer-for-gentoo.html</id>
        <content type="html">
            &lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;As with many linux distributions gentoo provides Live CDs which can be used to try out gentoo and install it. Gentoo offers two Live CDs one is a complete is with a GUI and the other is a minimal-install CD with only the tools needed to install Gentoo. These instructions will create gentoo’s minimal install cd.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;There are three steps to creating a Live CD for most Linux distributions: download the files, check the integrity of the files, and create and install medium. This example will create a usb stick with gentoo’s minimal install CD on it.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_download_the_files&quot;&gt;Download the Files&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;First the iso file and digest file must be downloaded. This can be accomplished by going to gentoo.org, clicking the get Gentoo link, and following the links to download the minimal install iso along with the digest file.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_check_file_integrity&quot;&gt;Check File Integrity&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;To check the integirty of the iso file first open the DIGEST file in a text editor and remove everything but the hashcode for the method you will be using to check the iso file. This is an example of checking the sha512 hash.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;http://johnmercier.com/images/2-editdigestfile.png&quot; alt=&quot;editdigestfile&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Next open a terminal and check the integrity of the iso file.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;http://johnmercier.com/images/3-checkdigest.png&quot; alt=&quot;checkdigest&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;If the file is OK then it is valid and can be used for the installation.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_create_install_medium&quot;&gt;Create Install Medium&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The next step is to either burn the iso file to a cd or write it to a usb drive. Burning a CD can be performed with any program that can burn an image. Here is an example of burning the image using brasero:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;http://johnmercier.com/images/4-burncd.png&quot; alt=&quot;burncd&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;This is an example of writing the iso to a usb drive using usb-imagewriter:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;http://johnmercier.com/images/6writeimageusb.png&quot; alt=&quot;write image usb&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;_boot_the_system&quot;&gt;Boot the System&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Once the installer is ready the next step is to boot into it.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;http://johnmercier.com/images/2014-04-0619-28-30.jpg&quot; alt=&quot;screen&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Note: There is another option for building Gentoo on a usb drive manually at &lt;a href=&quot;https://wiki.gentoo.org/wiki/LiveUSB/HOWTO&quot; class=&quot;bare&quot;&gt;https://wiki.gentoo.org/wiki/LiveUSB/HOWTO&lt;/a&gt;. There are two advantages with this method. First all the space on the usbdrive can be used and second the extra space can be used to install applications and change the configuration.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Gentoo Introduction</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2014/05-17-gentoo-introduction.html"/>
        <updated>2014-05-17T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2014/05-17-gentoo-introduction.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Gentoo is one of the few linux based operating systems that allows users to build the operating system from the ground up. Being able to choose every part of the operating system, gentoo is extremely customizable. As a result it can be adapted to meet any users needs.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Old computers usually come with outdated operating system that are vulnerable to attack. By using gentoo a user can ensure an old computer is running a newer, less vulnerable operating system while enjoying all of the useful features linux has to offer.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;One of the goals of gentoo, which sets it apart from all linux distributions, is support for compiling applications before they are installed. Gentoo allows each application to be customized at compile time for the users needs before it is installed through the use of profiles and use flags. Gentoo does this with a program called portage.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Compiling applications for the computer it is running on ensures the application is completely optimized for the best possible performance on the computer. Portage allows these optimizations to be set for the compiler so when an application is installed it is optimized with little input form the user.&amp;nbsp;This series of posts will describe how to setup gentoo on a Sony VAIO P computer.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The purpose of this series is to explain how to bring old computers back to life using gentoo. they will explain each step in updating an old sony viao p with a new gentoo operating system and explain how to get each device on the computer working. It will also describe the next steps to consider such as power management, using tmux, and links. The blog posts are not limited to users of a Sony Vaio P computer. They are intended for any user that may wish to bring an old computer back to life with gentoo.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The series starts with creating a minimal boot cd which is used to install gentoo. The minimal boot cd opens a linux command line environment for the user to work on the system. Since gentoo does not have an installer it needs to be installed manually. This involves all of the commands outlined in these posts.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The computer being used for this instruction manual is a Sony Vaio P. There is hardware on this computer that will not function without the drivers being selected in the kernel.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Hardware:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;PCI-E Ethernet Controller&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;PCI-E Wireless Adapter&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;USB Bluetooth Device&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Sony Motion Eye Camera&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;SD and DUO Card Reader&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The instructions will select options in the kernel to support these devices.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Java SE Bug #5052093</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2008/08-19-java-se-bug-5052093.html"/>
        <updated>2008-08-19T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2008/08-19-java-se-bug-5052093.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;While I was working on my &lt;a href=&quot;http://code.google.com/p/delta-utilities/&quot;&gt;download manager&lt;/a&gt; yesterday I found a bug in java. Every time I tried to make a connection to a fedora iso file I would get this error:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;java.lang.NumberFormatException: For input string: &quot;3580680192&quot;
   at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
   at java.lang.Integer.parseInt(Integer.java:459)
   at java.lang.Integer.parseInt(Integer.java:497)
   at sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:398)
   at sun.net.www.URLConnection.getContentLength(URLConnection.java:185)
   at mercier.lib.download.FTPDownloadConnectionFactory.initDownloadFromConnection(FTPDownloadConnectionFactory.java:50)
   at mercier.lib.download.FTPDownloadConnectionFactory.getVerifiedConnection(FTPDownloadConnectionFactory.java:71)
   at mercier.lib.download.FTPDownloadConnectionFactory.getConnection(FTPDownloadConnectionFactory.java:88)
   at mercier.lib.download.ConnectionFactory.getConnection(ConnectionFactory.java:60)
   at mercier.lib.download.ConnectionFactoryTest.testGetFTPDownloadConnection(ConnectionFactoryTest.java:119)
   at
   ...&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Does anyone know why this would happen? I found out after looking it up and finding &lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5052093&quot;&gt;bug #5052093&lt;/a&gt;. It happened because the api for contentLength uses an int return value, which has a max of 2,147,483,647. Not only that but when the internal code parses the contentLength from the stream it has to parseInt in order to return an int. Since anything above 2,147,483,647 is not an int a NumberFormatException is thrown. The content-length for the iso is 3,580,680,192.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The fix for this bug is only in JDK7 which can only be downloaded as a snapshot from java.net. Since they couldn’t change the original getContenthLength a new getContethLengthLong method has been added. From now on I’m going to use JDK7 even though it’s not out yet.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Google Code Project</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2008/05-18-google-code-project.html"/>
        <updated>2008-05-18T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2008/05-18-google-code-project.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I’ve started a Google Code project for my &lt;a href=&quot;http://code.google.com/p/delta-utilities/&quot;&gt;download manager&lt;/a&gt;. Here is the description so far:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This program currently can:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;Analyze a connection’s headers&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Start, stop, pause a download from a connection&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Retry a download after a set amount of time&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Limit the daily bandwidth used&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Future goals:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;Download a webpage and all of it’s sources&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Crawl the internet and access offline&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This is the first project I’ve ever made using an outside website to store everything. I tried to use sourceforge once but I couldn’t figure out cvs. Now that netbeans does everything for me It’s great.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Fixing "Could not Open Install.log file!"</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2008/03-25-fixing-could-not-open-install-log-file.html"/>
        <updated>2008-03-25T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2008/03-25-fixing-could-not-open-install-log-file.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;While trying to clean up my computer today I found some programs that I couldn’t uninstall. It seems that some installers need a Install.log file in order to uninstall some programs. Well I looked it up and here is the procedure I found:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;olist arabic&quot;&gt; 
 &lt;ol class=&quot;arabic&quot;&gt; 
  &lt;li&gt; &lt;p&gt;Open the directory where the program is installed.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Move (cut and paste somewhere else) the &quot;install.log&quot; to a different directory.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Now, double click the uninstaller&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;It will ask you to open the installation log. Locate to the &quot;install.log&quot; file on your desktop.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Now, uninstall will work fine and you can uninstall the program.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This works great.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    <entry>
        <title>Reading File Input from the Internet with Style</title>
        <author>
            <name>John Mercier</name>
        </author>
        <link href="http://johnmercier.com/blog/2008/03-22-reading-file-input-from-the-internet-with-style.html"/>
        <updated>2008-03-22T00:00:00Z</updated>
        <id>http://johnmercier.com/blog/2008/03-22-reading-file-input-from-the-internet-with-style.html</id>
        <content type="html">
            &lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;http://johnmercier.com/images/parserstream.png&quot; alt=&quot;parserstream&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Parsing Problem: Write a ParserStream that can parse tag attributes and simple text patterns. The Stream must also be able to replace those attributes with what the programmer wants.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Solution: The picture is a diagram of my solution (made with &lt;a href=&quot;http://live.gnome.org/Dia&quot; class=&quot;bare&quot;&gt;http://live.gnome.org/Dia&lt;/a&gt;).&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Decorator Pattern: I got the idea to use the decorator pattern from &quot;Head First Design Patterns&quot;. There is a great example of a Java I/O decorator that converts it’s input into lower case. This is the basic pattern that I started with and it grew from there. The main idea is to replace calls to read() with my own methods. My own methods of read will parse and replace the attributes. More on that later.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Factory Pattern: The next chapter in Head First Design Patterns discusses the Factory Pattern. I use the Factory Pattern to return the ParserStream that works with each of the different content types that I would like to parse (html, jpeg, text). In order to create one of these Streams the Factory has to have the content type, the input stream for the content, and the two interfaces for storing the parsed attributes and replacing the attributes.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Interface Pattern: I’m not sure if this is a more specific pattern but the basic idea is to allow the implementation of storing and overwriting the parsed attributes to be programmable. The parser interface is used to store attributes. The information passed to it will allow the programmer to determine the type of attribute (src, href) and the original value of the attribute before it is replaced by the formatting interface. The formattingInterface is used to change the attributes to whatever the programmer wants.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Application: The main reason why I made this is so I can make programs that download web pages and store them locally and crawl to all the source files for each link. In order for the html to link properly on the local computer the src and href attribute values have to be changed. I’m not sure if I will need to parse jpeg or text files but the capability is there.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Things to change: The only problem I see with this approach is that if I want to search for new attributes I will have to rewrite the ParserStream itself. While this is fine for me to do the class wouldn’t not be versatile in a library. One thing I will look into is making the attribute strings that the parser looks for work like Regular Expressions. I’m sure there is a way to do it but for now this will work.&lt;/p&gt; 
&lt;/div&gt;
        </content>
    </entry>
    
</feed>